{"version":3,"file":"indicia.js","sources":["../src/Store.js","../src/Collection.js","../src/constants.js","../src/helpers.js","../src/sync_helpers.js","../src/Media.js","../src/Occurrence.js","../src/Sample.js","../src/Report.js","../src/main.js"],"sourcesContent":["import Backbone from 'backbone';\nimport LocalForage from 'localforage';\n\n/*!\n Inspired by localForage Backbone Adapter\n */\n\n// For now, we aren't complicated: just set a property off Backbone to\n// serve as our export point.\nclass Store {\n  constructor(options = {}) {\n    const that = this;\n\n    // initialize db\n    this.localForage = null;\n    this.ready = new Promise((resolve, reject) => {\n      // check custom drivers (eg. SQLite)\n      const customDriversPromise = new Promise((_resolve) => {\n        if (options.driverOrder && typeof options.driverOrder[0] === 'object') {\n          LocalForage.defineDriver(options.driverOrder[0]).then(_resolve);\n        } else {\n          _resolve();\n        }\n      });\n\n      // config\n      customDriversPromise.then(() => {\n        const dbConfig = {\n          name: options.name || 'indicia',\n          storeName: options.storeName || 'models',\n        };\n\n        if (options.version) {\n          dbConfig.version = options.version;\n        }\n\n        const driverOrder = options.driverOrder || ['indexeddb', 'websql', 'localstorage'];\n        const drivers = Store._getDriverOrder(driverOrder);\n        const DB = options.LocalForage || LocalForage;\n\n        // init\n        that.localForage = DB.createInstance(dbConfig);\n        that.localForage\n          .setDriver(drivers)\n          .then(() => {\n            resolve(that.localForage);\n          })\n          .catch(reject);\n      });\n    });\n  }\n\n  static _getDriverOrder(driverOrder) {\n    return driverOrder.map((driver) => {\n      switch (driver) {\n        case 'indexeddb':\n          return LocalForage.INDEXEDDB;\n        case 'websql':\n          return LocalForage.WEBSQL;\n        case 'localstorage':\n          return LocalForage.LOCALSTORAGE;\n        default:\n          // custom\n          if (typeof driver === 'object' && driver._driver) {\n            return driver._driver;\n          }\n          return console.error('No such db driver!');\n      }\n    });\n  }\n\n  sync(method, model, options) {\n    switch (method) {\n      case 'read':\n        return model.cid ? this.find(model, options) : this.findAll(model, options);\n      case 'create':\n        return this.create(model, options);\n      case 'update':\n        return this.update(model, options);\n      case 'delete':\n        return this.destroy(model, options);\n      default:\n        return Promise.reject(new Error(`Local Sync method not found ${method}`));\n    }\n  }\n\n  save(model, options) {\n    return this._callWhenReady(() => {\n      // save collection\n      if (model instanceof Backbone.Collection) {\n        if (!model.models.length) {\n          return Promise.resolve();\n        }\n\n        const toWait = [];\n        _.each(model.models, (collectionModel) => {\n          if (collectionModel.store) toWait.push(collectionModel.save(null, options));\n        });\n        return Promise.all(toWait);\n      }\n\n      // early return if no id or cid\n      if (!model.id && !model.cid) {\n        return Promise.reject(new Error('Invalid model passed to store'));\n      }\n\n      const key = model.cid;\n      return this.localForage.setItem(key, model.toJSON()).then(() => Promise.resolve()); // don't return anything to update the model\n    });\n  }\n\n  create(model, options) {\n    // We always have an ID available by this point, so we just call\n    // the update method.\n    return this.update(model, options);\n  }\n\n  update(model, options) {\n    return this.save(model, options);\n  }\n\n  find(model) {\n    return this._callWhenReady(() =>\n      // eslint-disable-line\n      this.localForage.getItem(model.cid).then((data) => {\n        if (!data) {\n          return Promise.reject(`LocalForage entry with ${model.cid} as key not found`);\n        }\n        return data;\n      })\n    );\n  }\n\n  // Only used by `Backbone.Collection#sync`.\n  findAll() {\n    return this._callWhenReady(() => {\n      // build up samples\n      const models = [];\n      return this.localForage\n        .iterate((value) => {\n          models.push(value);\n        })\n        .then(() => Promise.resolve(models));\n    });\n  }\n\n  destroy(model) {\n    return this._callWhenReady(() => {\n      // collection destroy\n      if (model instanceof Backbone.Collection) {\n        if (!model.models.length) {\n          return Promise.resolve();\n        }\n\n        const toWait = [];\n        // need to clone:\n        // http://stackoverflow.com/questions/10858935/cleanest-way-to-destroy-every-model-in-a-collection-in-backbone\n        _.each(_.clone(model.models), (collectionModel) => {\n          if (collectionModel.store) toWait.push(collectionModel.destroy());\n        });\n        return Promise.all(toWait);\n      }\n\n      // early return if no id or cid\n      if (!model.id && !model.cid) {\n        return Promise.reject(new Error('Invalid model passed to store'));\n      }\n\n      const key = model.cid;\n      return this.localForage.removeItem(key).then(() => Promise.resolve(model.toJSON()));\n    });\n  }\n\n  _callWhenReady(func) {\n    const that = this;\n    return this.ready.then(() => func.bind(that)());\n  }\n}\n\nexport default Store;\n","/** *********************************************************************\n * COLLECTION MODULE\n **********************************************************************/\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport Store from './Store';\n\nconst Collection = Backbone.Collection.extend({\n  constructor(attributes = {}, options = {}) {\n    this.store = options.store || this.store || new Store();\n\n    if (!options.model && !this.model) {\n      console.error(\"Collection's model must be provided\");\n      return;\n    }\n\n    Backbone.Collection.prototype.constructor.apply(this, arguments);\n  },\n\n  comparator(a) {\n    return a.metadata.created_on;\n  },\n\n  size() {\n    return Promise.resolve(this.length);\n  },\n\n  /**\n   * New function to save all models within the collection.\n   * @param models\n   * @param options\n   */\n  save(collection, options) {\n    return this.sync('create', collection || this, options);\n  },\n\n  /**\n   * New function to destroy all models within the collection.\n   * @returns {*}\n   */\n  destroy(collection, options) {\n    return this.sync('delete', collection || this, options);\n  },\n\n  /**\n   * New function to fetch all models within the collection.\n   * @returns {*}\n   */\n  fetch(options) {\n    options = _.extend({ parse: true }, options);\n    const collection = this;\n\n    return this.sync('read', this, options).then((resp) => {\n      const method = options.reset ? 'reset' : 'set';\n\n      collection[method](resp, options);\n      try {\n        collection.trigger('sync', collection, resp, options);\n      } catch (e) {\n        /* continue on listener error */\n      }\n    });\n  },\n\n  /**\n   * Synchronises the collection.\n   * @param method\n   * @param model\n   * @param options\n   */\n  sync(method, collection, options = {}) {\n    if (options.remote) {\n      return this._syncRemote(method, collection, options);\n    }\n\n    if (!this.store) {\n      return Promise.reject(new Error('Trying to locally sync a collection without a store'));\n    }\n\n    try {\n      this.trigger('request', collection, null, options);\n    } catch (e) {\n      /* continue on listener error */\n    }\n    return this.store.sync(method, collection, options);\n  },\n\n  /**\n   * Syncs the collection to the remote server.\n   * Returns on success: model, response, options\n   */\n  _syncRemote(method, collection, options) {\n    collection.synchronising = true;\n\n    // model.trigger('request', model, xhr, options);\n    switch (method) {\n      case 'create':\n        if (!collection.models.length) {\n          return Promise.resolve();\n        }\n        const toWait = [];\n        _.each(collection.models, (model) => {\n          if (model.store) toWait.push(model.save(null, options));\n        });\n        return Promise.all(toWait);\n\n      case 'update':\n        // todo\n        collection.synchronising = false;\n        return Promise.reject(new Error('Updating the model is not possible yet.'));\n\n      case 'read':\n        // todo\n        collection.synchronising = false;\n        return Promise.reject(new Error('Reading the model is not possible yet.'));\n\n      case 'delete':\n        // todo\n        collection.synchronising = false;\n        return Promise.reject(new Error('Deleting the model is not possible yet.'));\n\n      default:\n        collection.synchronising = false;\n        return Promise.reject(new Error(`No such remote sync option: ${method}`));\n    }\n  },\n\n  /**\n   * Returns an object with attributes and their values\n   * mapped for warehouse submission.\n   *\n   * @returns {*}\n   */\n  _getSubmission(options) {\n    const submission = [];\n    let media = [];\n\n    // transform its models\n    this.models.forEach((model) => {\n      const [modelSubmission, modelMedia] = model._getSubmission(options);\n      submission.push(modelSubmission);\n      media = media.concat(modelMedia);\n    });\n\n    return [submission, media];\n  },\n\n  // Prepare a hash of attributes (or other model) to be added to this\n  // collection.\n  _prepareModel(options) {\n    if (this._isModel(options)) {\n      if (!options.collection) options.collection = this;\n      return options;\n    }\n\n    const attrs = options.attributes;\n\n    options = options ? _.clone(options) : {};\n    options.collection = this;\n    options.store = this.store;\n    const model = new this.model(attrs, options); // eslint-disable-line\n    if (!model.validationError) return model;\n    this.trigger('invalid', this, model.validationError, options);\n    return false;\n  },\n});\n\nexport { Collection as default };\n","/* eslint-disable */\nexport const API_BASE = 'api/',\n  API_VER = 'v1',\n  API_SAMPLES_PATH = '/samples',\n  API_REPORTS_PATH = '/reports',\n  SYNCHRONISING = 0,\n  SYNCED = 1,\n  LOCAL = 2,\n  SERVER = 3,\n  CHANGED_LOCALLY = 4,\n  CHANGED_SERVER = 5,\n  CONFLICT = -1;\n","/** *********************************************************************\n * HELPER FUNCTIONS\n **********************************************************************/\n\n/**\n * Generate UUID.\n */\nconst getNewUUID = () =>\n  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n\n    return v.toString(16);\n  });\n\n/**\n * Converts DataURI object to a Blob.\n *\n * @param {type} dataURI\n * @param {type} fileType\n * @returns {undefined}\n */\nconst dataURItoBlob = (dataURI, fileType) => {\n  const binary = atob(dataURI.split(',')[1]);\n  const array = [];\n  for (let i = 0; i < binary.length; i++) {\n    array.push(binary.charCodeAt(i));\n  }\n  return new Blob([new Uint8Array(array)], {\n    type: fileType,\n  });\n};\n\n// Detecting data URLs\n// https://gist.github.com/bgrins/6194623\n\n// data URI - MDN https://developer.mozilla.org/en-US/docs/data_URIs\n// The 'data' URL scheme: http://tools.ietf.org/html/rfc2397\n// Valid URL Characters: http://tools.ietf.org/html/rfc2396#section2\nconst isDataURL = (string) => {\n  if (!string) {\n    return false;\n  }\n  const normalized = string.toString(); // numbers\n\n  const regex = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$/i;\n  return !!normalized.match(regex);\n};\n\n// From jQuery 1.4.4 .\nconst isPlainObject = (obj) => {\n  function type(obj) {\n    const class2type = {};\n    const types = 'Boolean Number String Function Array Date RegExp Object'.split(' ');\n    for (let i = 0; i < types.length; i++) {\n      class2type[`[object ${types[i]}]`] = types[i].toLowerCase();\n    }\n    return obj == null ? String(obj) : class2type[toString.call(obj)] || 'object';\n  }\n\n  function isWindow(obj) {\n    return obj && typeof obj === 'object' && 'setInterval' in obj;\n  }\n\n  // Must be an Object.\n  // Because of IE, we also have to check the presence of the constructor property.\n  // Make sure that DOM nodes and window objects don't pass through, as well\n  if (!obj || type(obj) !== 'object' || obj.nodeType || isWindow(obj)) {\n    return false;\n  }\n\n  // Not own constructor property must be Object\n  if (\n    obj.constructor &&\n    !hasOwn.call(obj, 'constructor') &&\n    !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')\n  ) {\n    return false;\n  }\n\n  // Own properties are enumerated firstly, so to speed up,\n  // if last one is own, then all properties are own.\n\n  let key;\n  for (key in obj) {\n  }\n\n  return key === undefined || hasOwn.call(obj, key);\n};\n\n// checks if the object has any elements.\nconst isEmptyObject = (obj) => {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Formats the date to Indicia Warehouse format.\n * @param date String or Date object\n * @returns String formatted date\n */\nconst formatDate = (dateToFormat) => {\n  let date = dateToFormat;\n  let now = new Date();\n  let day = 0;\n  let month = 0;\n  const reg = /\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  const regDash = /\\d{4}-\\d{1,2}-\\d{1,2}$/;\n  const regDashInv = /\\d{1,2}-\\d{1,2}-\\d{4}$/;\n  let dateArray = [];\n\n  if (typeof date === 'string') {\n    dateArray = date.split('-');\n    // check if valid\n    if (reg.test(date)) {\n      return date;\n      // dashed\n    } else if (regDash.test(date)) {\n      date = new Date(\n        window.parseInt(dateArray[0]),\n        window.parseInt(dateArray[1]) - 1,\n        window.parseInt(dateArray[2])\n      );\n      // inversed dashed\n    } else if (regDashInv.test(date)) {\n      date = new Date(\n        window.parseInt(dateArray[2]),\n        window.parseInt(dateArray[1]) - 1,\n        window.parseInt(dateArray[0])\n      );\n    }\n  }\n\n  now = date || now;\n  day = `0${now.getDate()}`.slice(-2);\n  month = `0${now.getMonth() + 1}`.slice(-2);\n\n  return `${day}/${month}/${now.getFullYear()}`;\n};\n\nexport default {\n  getNewUUID,\n  dataURItoBlob,\n  isDataURL,\n  isPlainObject,\n  isEmptyObject,\n  formatDate,\n};\n","import _ from 'underscore';\n\nconst helpers = {\n  save(key, val, options) {\n    const model = this;\n\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    let attrs;\n    if (key == null || typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options = _.extend({ validate: true, parse: true }, options);\n    const wait = options.wait;\n\n    // If we're not waiting and attributes exist, save acts as\n    // `set(attr).save(null, opts)` with validation. Otherwise, check if\n    // the model will be valid when the attributes, if any, are set.\n    if (attrs && !wait) {\n      if (!this.set(attrs, options)) return false;\n    } else if (!this._validate(attrs, options)) {\n      return false;\n    }\n\n    // After a successful server-side save, the client is (optionally)\n    // updated with the server-side state.\n    const attributes = model.attributes;\n\n    // Set temporary attributes if `{wait: true}` to properly find new ids.\n    if (attrs && wait) model.attributes = _.extend({}, attributes, attrs);\n\n    let method = 'create';\n    if (!model.isNew() && options.remote) {\n      method = options.patch ? 'patch' : 'update';\n    }\n    if (method === 'patch' && !options.attrs) options.attrs = attrs;\n\n    // parent save\n    if (model.parent && !options.remote) {\n      return model.parent\n        .save(key, val, options)\n        .then(() => {\n          // Ensure attributes are restored during synchronous saves.\n          model.attributes = attributes;\n          try {\n            model.trigger('sync', model, null, options);\n          } catch (e) {\n            /* continue on listener error */\n          }\n          return model;\n        })\n        .catch((err) => {\n          try {\n            model.trigger('error', err);\n          } catch (e) {\n            /* continue on listener error */\n          }\n          return Promise.reject(err);\n        });\n    }\n\n    // model save\n    return model\n      .sync(method, model, options)\n      .then((resp) => {\n        if (options.remote) {\n          // update the model and occurrences with new remote IDs\n          model._remoteCreateParse(model, resp.data);\n\n          // update metadata\n          const timeNow = new Date();\n          model.metadata.server_on = timeNow;\n          model.metadata.updated_on = timeNow;\n          model.metadata.synced_on = timeNow;\n\n          // Ensure attributes are restored during synchronous saves.\n          model.attributes = attributes;\n\n          // save model's changes locally\n          return model.save().then(() => {\n            try {\n              model.trigger('sync:remote', model, resp, options);\n            } catch (e) {\n              /* continue on listener error */\n            }\n            return model;\n          });\n        }\n\n        try {\n          model.trigger('sync', model, resp, options);\n        } catch (e) {\n          /* continue on listener error */\n        }\n        return model;\n      })\n      .catch((err) => {\n        try {\n          model.trigger('error', err);\n        } catch (e) {\n          /* continue on listener error */\n        }\n        return Promise.reject(err);\n      });\n  },\n\n  /**\n   *\n   * @param options\n   * @returns {Promise}\n   */\n  destroy(options = {}) {\n    const model = this;\n    const collection = this.collection; // keep reference for triggering\n\n    const promise = new Promise((fulfill, reject) => {\n      function finalise() {\n        // removes from all collections etc\n        model.stopListening();\n        try {\n          model.trigger('destroy', model, collection, options);\n        } catch (e) {\n          /* continue on listener error */\n        }\n\n        if (!options.noSave) {\n          // parent save the changes permanently\n          model.parent.save(null, options).then(() => {\n            try {\n              model.trigger('sync', model, null, options);\n            } catch (e) {\n              /* continue on listener error */\n            }\n            fulfill(model);\n          });\n        } else {\n          try {\n            model.trigger('sync', model, null, options);\n          } catch (e) {\n            /* continue on listener error */\n          }\n          fulfill(model);\n        }\n      }\n\n      if (model.parent) {\n        if (options.remote) {\n          // destroy remotely\n          model.sync('delete', model, options).then(finalise);\n        } else {\n          finalise();\n        }\n      } else {\n        // destroy locally/remotely\n        model\n          .sync('delete', model, options)\n          .then(() => {\n            // removes from all collections etc\n            model.stopListening();\n            try {\n              model.trigger('destroy', model, collection, options);\n            } catch (e) {\n              /* continue on listener error */\n            }\n            try {\n              model.trigger('sync', model, null, options);\n            } catch (e) {\n              /* continue on listener error */\n            }\n\n            fulfill(model);\n          })\n          .catch(reject);\n      }\n    });\n\n    return promise;\n  },\n};\n\nexport default helpers;\n","/** *********************************************************************\n * IMAGE\n **********************************************************************/\nimport Backbone from 'backbone';\nimport _ from 'underscore';\n\nimport helpers from './helpers';\nimport syncHelpers from './sync_helpers';\n\nconst THUMBNAIL_WIDTH = 100; // px\nconst THUMBNAIL_HEIGHT = 100; // px\n\nconst Media = Backbone.Model.extend({\n  constructor(attributes = {}, options = {}) {\n    let attrs = attributes;\n    if (typeof attributes === 'string') {\n      const data = attributes;\n      attrs = { data };\n      return;\n    }\n\n    this.id = options.id; // remote ID\n    this.cid = options.cid || helpers.getNewUUID();\n    this.setParent(options.parent || this.parent);\n\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n\n    if (options.metadata) {\n      this.metadata = options.metadata;\n    } else {\n      this.metadata = {\n        created_on: new Date(),\n      };\n    }\n\n    this.initialize.apply(this, arguments); // eslint-disable-line\n  },\n\n  /**\n   * Synchronises the model.\n   * @param method\n   * @param model\n   * @param options\n   */\n  sync(method, model, options = {}) {\n    if (options.remote) {\n      return this._syncRemote(method, model, options);\n    }\n\n    return Promise.reject(new Error('Local sync is not possible yet.'));\n  },\n\n  /**\n   * Syncs the record to the remote server.\n   * Returns on success: model, response, options\n   */\n  _syncRemote() {\n    return Promise.reject(new Error('Remote sync is not possible yet.'));\n  },\n\n  /**\n   * Returns image's absolute URL or dataURI.\n   */\n  getURL() {\n    return this.get('data');\n  },\n\n  /**\n   * Sets parent.\n   * @param parent\n   */\n  setParent(parent) {\n    if (!parent) return;\n\n    const that = this;\n    this.parent = parent;\n    this.parent.on('destroy', () => {\n      that.destroy({ noSave: true });\n    });\n  },\n\n  /**\n   * Resizes itself.\n   */\n  resize(MAX_WIDTH, MAX_HEIGHT) {\n    const that = this;\n    const promise = new Promise((fulfill, reject) => {\n      Media.resize(this.getURL(), this.get('type'), MAX_WIDTH, MAX_HEIGHT)\n        .then((args) => {\n          const [image, data] = args;\n          that.set('data', data);\n          fulfill([image, data]);\n        })\n        .catch(reject);\n    });\n    return promise;\n  },\n\n  /**\n   * Adds a thumbnail to image model.\n   * @param options\n   */\n  addThumbnail(options = {}) {\n    const that = this;\n\n    const promise = new Promise((fulfill, reject) => {\n      // check if data source is dataURI\n      const re = /^data:/i;\n      if (re.test(this.getURL())) {\n        Media.resize(\n          this.getURL(),\n          this.get('type'),\n          THUMBNAIL_WIDTH || options.width,\n          THUMBNAIL_WIDTH || options.width\n        )\n          .then((args) => {\n            const [, data] = args;\n            that.set('thumbnail', data);\n            fulfill();\n          })\n          .catch(reject);\n        return;\n      }\n\n      Media.getDataURI(this.getURL(), {\n        width: THUMBNAIL_WIDTH || options.width,\n        height: THUMBNAIL_HEIGHT || options.height,\n      })\n        .then((data) => {\n          that.set('thumbnail', data[0]);\n          fulfill();\n        })\n        .catch(reject);\n    });\n\n    return promise;\n  },\n\n  // overwrite if you want to validate before saving remotely\n  validate(attributes, options = {}) {\n    if (options.remote) {\n      return this.validateRemote(attributes, options);\n    }\n    return null;\n  },\n\n  validateRemote(attributes) {\n    const attrs = _.extend({}, this.attributes, attributes);\n    const errors = {};\n\n    // type\n    if (!attrs.data) {\n      errors.attributes || (errors.attributes = {});\n      errors.attributes.data = \"can't be empty\";\n    }\n\n    if (!attrs.type) {\n      errors.attributes || (errors.attributes = {});\n      errors.attributes.type = \"can't be empty\";\n    }\n\n    if (!_.isEmpty(errors)) {\n      return errors;\n    }\n\n    return null;\n  },\n\n  toJSON() {\n    const data = {\n      id: this.id,\n      cid: this.cid,\n      metadata: this.metadata,\n      attributes: this.attributes,\n    };\n    return data;\n  },\n\n  /**\n   * Returns an object with attributes and their values\n   * mapped for warehouse submission.\n   *\n   * @returns {*}\n   */\n  _getSubmission() {\n    const submission = {\n      id: this.id,\n      name: this.cid,\n    };\n\n    return [submission];\n  },\n});\n\n_.extend(Media.prototype, syncHelpers);\n\n_.extend(Media, {\n  /**\n   * Transforms and resizes an image file into a string.\n   * Can accept file image path and a file input file.\n   *\n   * @param onError\n   * @param file\n   * @param onSaveSuccess\n   * @returns {number}\n   */\n  getDataURI(file, options = {}) {\n    const promise = new Promise((fulfill, reject) => {\n      // file paths\n      if (typeof file === 'string') {\n        // get extension\n        let fileType = file.replace(/.*\\.([a-z]+)$/i, '$1');\n        if (fileType === 'jpg') fileType = 'jpeg'; // to match media types image/jpeg\n\n        Media.resize(file, fileType, options.width, options.height).then((args) => {\n          const [image, dataURI] = args;\n          fulfill([dataURI, fileType, image.width, image.height]);\n        });\n        return;\n      }\n\n      // file inputs\n      if (!window.FileReader) {\n        reject(new Error('No File Reader'));\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        if (options.width || options.height) {\n          // resize\n          Media.resize(event.target.result, file.type, options.width, options.height).then((args) => {\n            const [image, dataURI] = args;\n            fulfill([dataURI, file.type, image.width, image.height]);\n          });\n        } else {\n          const image = new window.Image(); // native one\n\n          image.onload = () => {\n            const type = file.type.replace(/.*\\/([a-z]+)$/i, '$1');\n            fulfill([event.target.result, type, image.width, image.height]);\n          };\n          image.src = event.target.result;\n        }\n      };\n      reader.readAsDataURL(file);\n    });\n\n    return promise;\n  },\n\n  /**\n   * http://stackoverflow.com/questions/2516117/how-to-scale-an-image-in-data-uri-format-in-javascript-real-scaling-not-usin\n   * @param data\n   * @param fileType\n   * @param MAX_WIDTH\n   * @param MAX_HEIGHT\n   */\n  resize(data, fileType, MAX_WIDTH, MAX_HEIGHT) {\n    const promise = new Promise((fulfill) => {\n      const image = new window.Image(); // native one\n\n      image.onload = () => {\n        let width = image.width;\n        let height = image.height;\n        const maxWidth = MAX_WIDTH || width;\n        const maxHeight = MAX_HEIGHT || height;\n\n        let res = null;\n\n        // resizing\n        if (width > height) {\n          res = width / maxWidth;\n        } else {\n          res = height / maxHeight;\n        }\n\n        width /= res;\n        height /= res;\n\n        // Create a canvas with the desired dimensions\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n\n        // Scale and draw the source image to the canvas\n        canvas.getContext('2d').drawImage(image, 0, 0, width, height);\n\n        // Convert the canvas to a data URL in some format\n        fulfill([image, canvas.toDataURL(fileType)]);\n      };\n\n      image.src = data;\n    });\n\n    return promise;\n  },\n});\n\nexport { Media as default };\n","/** *********************************************************************\n * OCCURRENCE\n **********************************************************************/\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport helpers from './helpers';\nimport syncHelpers from './sync_helpers';\nimport Media from './Media';\nimport Collection from './Collection';\n\nconst Occurrence = Backbone.Model.extend({\n  Media,\n\n  constructor(attributes = {}, options = {}) {\n    const that = this;\n    let attrs = attributes;\n\n    this.id = options.id; // remote ID\n    this.cid = options.cid || helpers.getNewUUID();\n    this.setParent(options.parent || this.parent);\n\n    this.keys = options.keys || this.keys; // warehouse attribute keys\n\n    if (options.Media) this.Media = options.Media;\n\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n\n    this.metadata = this._getDefaultMetadata(options);\n\n    if (options.media) {\n      const mediaArray = [];\n      _.each(options.media, (media) => {\n        if (media instanceof this.Media) {\n          media.setParent(that);\n          mediaArray.push(media);\n        } else {\n          const modelOptions = _.extend(media, { parent: that });\n          mediaArray.push(new this.Media(media.attributes, modelOptions));\n        }\n      });\n      this.media = new Collection(mediaArray, {\n        model: this.Media,\n      });\n    } else {\n      this.media = new Collection([], {\n        model: this.Media,\n      });\n    }\n\n    this.initialize.apply(this, arguments); // eslint-disable-line\n  },\n\n  /**\n   * Sets parent.\n   * todo: move to private _space\n   * @param parent\n   */\n  setParent(parent) {\n    if (!parent) return;\n\n    const that = this;\n    this.parent = parent;\n    this.parent.on('destroy', () => {\n      that.destroy({ noSave: true });\n    });\n  },\n\n  /**\n   * Adds an media to occurrence and sets the medias's parent to this.\n   * @param media\n   */\n  addMedia(mediaObj) {\n    if (!mediaObj) return;\n    mediaObj.setParent(this);\n    this.media.add(mediaObj);\n  },\n\n  /**\n   * Returns child media.\n   * @param index\n   * @returns {*}\n   */\n  getMedia(index = 0) {\n    return this.media.at(index);\n  },\n\n  // overwrite if you want to validate before saving remotely\n  validate(attributes, options = {}) {\n    if (options.remote) {\n      return this.validateRemote(attributes, options);\n    }\n    return null;\n  },\n\n  validateRemote(attributes) {\n    const attrs = _.extend({}, this.attributes, attributes);\n    const media = {};\n\n    const modelErrors = {};\n\n    // location\n    if (!attrs.taxon) {\n      modelErrors.taxon = \"can't be blank\";\n    }\n\n    // media\n    if (this.media.length) {\n      this.media.each((mediaModel) => {\n        const errors = mediaModel.validateRemote();\n        if (errors) {\n          const mediaID = mediaModel.cid;\n          media[mediaID] = errors;\n        }\n      });\n    }\n\n    const errors = {};\n    if (!_.isEmpty(media)) {\n      errors.media = media;\n    }\n    if (!_.isEmpty(modelErrors)) {\n      errors.attributes = modelErrors;\n    }\n\n    if (!_.isEmpty(errors)) {\n      return errors;\n    }\n\n    return null;\n  },\n\n  toJSON() {\n    let media;\n    if (!this.media) {\n      media = [];\n      console.warn('toJSON media missing');\n    } else {\n      media = this.media.toJSON();\n    }\n    const data = {\n      id: this.id,\n      cid: this.cid,\n      metadata: this.metadata,\n      attributes: this.attributes,\n      media,\n    };\n    return data;\n  },\n\n  /**\n   * Returns an object with attributes and their values\n   * mapped for warehouse submission.\n   *\n   * @returns {*}\n   */\n  _getSubmission(options = {}) {\n    const that = this;\n    const occKeys = typeof this.keys === 'function' ? this.keys() : this.keys;\n    const keys = $.extend(true, Occurrence.keys, occKeys); // warehouse keys/values to transform\n    const media = [...this.media.models]; // all media within this and child models\n\n    const submission = {\n      id: this.id,\n      external_key: this.cid,\n      fields: {},\n      media: [],\n    };\n\n    if (this.metadata.training || options.training) {\n      submission.training = this.metadata.training || options.training;\n    }\n\n    if (this.metadata.release_status || options.release_status) {\n      submission.release_status = this.metadata.release_status || options.release_status;\n    }\n\n    if (this.metadata.record_status || options.record_status) {\n      submission.record_status = this.metadata.record_status || options.record_status;\n    }\n\n    if (this.metadata.sensitive || options.sensitive) {\n      submission.sensitive = this.metadata.sensitive || options.sensitive;\n    }\n\n    if (this.metadata.confidential || options.confidential) {\n      submission.confidential = this.metadata.confidential || options.confidential;\n    }\n\n    if (this.metadata.sensitivity_precision || options.sensitivity_precision) {\n      submission.sensitivity_precision =\n        this.metadata.sensitivity_precision || options.sensitivity_precision;\n    }\n\n    // transform attributes\n    Object.keys(this.attributes).forEach((attr) => {\n      // no need to send attributes with no values\n      let value = that.attributes[attr];\n      if (!value) return;\n\n      if (!keys[attr]) {\n        if (attr !== 'email') {\n          console.warn(`Indicia: no such key: ${attr}`);\n        }\n        submission.fields[attr] = value;\n        return;\n      }\n\n      const warehouseAttr = keys[attr].id || attr;\n\n      // check if has values to choose from\n      if (keys[attr].values) {\n        if (typeof keys[attr].values === 'function') {\n          // get a value from a function\n          value = keys[attr].values(value, submission, that);\n        } else if (_.isArray(value)) {\n          // the attribute has multiple values\n          value = value.map(v => keys[attr].values[v]);\n        } else {\n          value = keys[attr].values[value];\n        }\n      }\n\n      // don't need to send null or undefined\n      if (value) {\n        submission.fields[warehouseAttr] = value;\n      }\n    });\n\n    // transform sub models\n    // media does not return any media-models only JSON data about them\n    // media files will be attached separately\n    const [mediaSubmission] = this.media._getSubmission();\n    submission.media = mediaSubmission;\n\n    return [submission, media];\n  },\n\n  /**\n   * Synchronises the model.\n   * @param method\n   * @param model\n   * @param options\n   */\n  sync(method, model, options = {}) {\n    if (options.remote) {\n      return this._syncRemote(method, model, options);\n    }\n\n    return Promise.reject(new Error('Local sync is not possible yet.'));\n  },\n\n  /**\n   * Syncs the record to the remote server.\n   * Returns on success: model, response, options\n   */\n  _syncRemote() {\n    return Promise.reject(new Error('Remote sync is not possible yet.'));\n  },\n\n  _getDefaultMetadata(options) {\n    const metadata = typeof this.metadata === 'function' ? this.metadata() : this.metadata;\n\n    options.metadata = options.metadata || {};\n\n    const today = new Date();\n    const defaults = {\n      training: options.training,\n\n      created_on: today,\n      updated_on: today,\n\n      synced_on: null, // set when fully initialized only\n      server_on: null, // updated on server\n    };\n\n    return $.extend(true, defaults, metadata, options.metadata);\n  },\n});\n\n_.extend(Occurrence.prototype, syncHelpers);\n\n/**\n * Warehouse attributes and their values.\n */\nOccurrence.keys = {\n  taxon: {\n    id: 'taxa_taxon_list_id',\n  },\n  comment: { id: 'comment' },\n};\n\nexport { Occurrence as default };\n","/** *********************************************************************\n * SAMPLE\n *\n * Refers to the event in which the sightings were observed, in other\n * words it describes the place, date, people, environmental conditions etc.\n * Within a sample, you can have zero or more occurrences which refer to each\n * species sighted as part of the sample.\n **********************************************************************/\nimport Backbone from 'backbone';\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  SYNCHRONISING,\n  CONFLICT,\n  CHANGED_LOCALLY,\n  CHANGED_SERVER,\n  SYNCED,\n  SERVER,\n  LOCAL,\n  API_BASE,\n  API_VER,\n  API_SAMPLES_PATH,\n} from './constants';\nimport helpers from './helpers';\nimport syncHelpers from './sync_helpers';\nimport Media from './Media';\nimport Store from './Store';\nimport Occurrence from './Occurrence';\nimport Collection from './Collection';\n\nconst Sample = Backbone.Model.extend({\n  Media,\n  Occurrence,\n\n  host_url: null, // must be set up for remote sync\n  api_key: null, // must be set up for remote sync\n\n  user: null, // must be set up for remote sync\n  password: null, // must be set up for remote sync\n\n  constructor(attributes = {}, options = {}) {\n    this.id = options.id; // remote ID\n    this.cid = options.cid || helpers.getNewUUID();\n    this.setParent(options.parent || this.parent);\n\n    this.store = options.store || this.store || new Store();\n    this.keys = options.keys || this.keys; // warehouse attribute keys\n\n    if (options.Media) this.Media = options.Media;\n    if (options.Occurrence) this.Occurrence = options.Occurrence;\n    if (options.onSend) this.onSend = options.onSend;\n\n    // remote host defaults\n    this.host_url = options.host_url || this.host_url;\n    this.api_key = options.api_key || this.api_key;\n    this.user = options.user || this.user;\n    this.password = options.password || this.password;\n\n    // attrs\n    this.attributes = {};\n    const defaultAttrs = {\n      date: new Date(),\n      location_type: 'latlon',\n    };\n    let attrs = _.extend(defaultAttrs, attributes);\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n\n    // metadata\n    this.metadata = this._getDefaultMetadata(options);\n\n    this.remote = {}; // for synchronisation state\n\n    // initialise sub models\n    this.occurrences = this._parseModels(options.occurrences, this.Occurrence);\n    this.samples = this._parseModels(options.samples, this.constructor);\n    this.media = this._parseModels(options.media, this.Media);\n\n    this.initialize.apply(this, arguments); // eslint-disable-line\n  },\n\n  /**\n   * Sets parent.\n   * @param parent\n   */\n  setParent(parent) {\n    if (!parent) return;\n\n    const that = this;\n    this.parent = parent;\n    this.parent.on('destroy', () => {\n      that.destroy({ noSave: true });\n    });\n  },\n\n  /**\n   * Adds a subsample to the sample and sets the samples's parent to this.\n   * @param sample\n   */\n  addSample(sample) {\n    if (!sample) return;\n    sample.setParent(this);\n\n    this.samples.push(sample);\n  },\n\n  /**\n   * Adds an occurrence to sample and sets the occurrence's sample to this.\n   * @param occurrence\n   */\n  addOccurrence(occurrence) {\n    if (!occurrence) return;\n    occurrence.setParent(this);\n\n    this.occurrences.push(occurrence);\n  },\n\n  /**\n   * Adds an media to occurrence and sets the media's occurrence to this.\n   * @param media\n   */\n  addMedia(media) {\n    if (!media) return;\n    media.setParent(this);\n    this.media.add(media);\n  },\n\n  // overwrite if you want to validate before saving locally\n  validate(attributes, options = {}) {\n    if (options.remote) {\n      return this.validateRemote(attributes, options);\n    }\n    return null;\n  },\n\n  validateRemote(attributes) {\n    const attrs = _.extend({}, this.attributes, attributes);\n\n    const modelErrors = {};\n    const samples = {};\n    const occurrences = {};\n    const media = {};\n\n    // location\n    if (!attrs.location) {\n      modelErrors.location = \"can't be blank\";\n    }\n\n    // location type\n    if (!attrs.location_type) {\n      modelErrors.location_type = \"can't be blank\";\n    }\n\n    // date\n    if (!attrs.date) {\n      modelErrors.date = \"can't be blank\";\n    } else {\n      const date = new Date(attrs.date);\n      if (date === 'Invalid Date' || date > new Date()) {\n        modelErrors.date = new Date(date) > new Date() ? 'future date' : 'invalid';\n      }\n    }\n\n    // check if has any indirect occurrences\n    if (!this.samples.length && !this.occurrences.length) {\n      modelErrors.occurrences = 'no occurrences';\n    }\n\n    // samples\n    if (this.samples.length) {\n      this.samples.each((model) => {\n        const errors = model.validateRemote();\n        if (errors) {\n          const sampleID = model.cid;\n          samples[sampleID] = errors;\n        }\n      });\n    }\n\n    // occurrences\n    if (this.occurrences.length) {\n      this.occurrences.each((occurrence) => {\n        const errors = occurrence.validateRemote();\n        if (errors) {\n          const occurrenceID = occurrence.cid;\n          occurrences[occurrenceID] = errors;\n        }\n      });\n    }\n\n    // media\n    if (this.media.length) {\n      this.media.each((mediaModel) => {\n        const errors = mediaModel.validateRemote();\n        if (errors) {\n          const mediaID = mediaModel.cid;\n          media[mediaID] = errors;\n        }\n      });\n    }\n\n    const errors = {};\n    if (!_.isEmpty(media)) {\n      errors.media = media;\n    }\n    if (!_.isEmpty(occurrences)) {\n      errors.occurrences = occurrences;\n    }\n    if (!_.isEmpty(samples)) {\n      errors.samples = samples;\n    }\n    if (!_.isEmpty(modelErrors)) {\n      errors.attributes = modelErrors;\n    }\n\n    if (!_.isEmpty(errors)) {\n      return errors;\n    }\n\n    return null;\n  },\n\n  /**\n   * Synchronises the model.\n   * @param method\n   * @param model\n   * @param options\n   */\n  sync(method, model, options = {}) {\n    if (options.remote) {\n      return this._syncRemote(method, model, options);\n    }\n\n    if (!this.store) {\n      return Promise.reject(new Error('Trying to locally sync a model without a store'));\n    }\n\n    try {\n      this.trigger('request', model, null, options);\n    } catch (e) {\n      /* continue on listener error */\n    }\n    return this.store.sync(method, model, options);\n  },\n\n  /**\n   * Syncs the record to the remote server.\n   * Returns on success: model, response, options\n   */\n  _syncRemote(method, model, options) {\n    // Ensure that we have a URL.\n    if (!this.host_url) {\n      return Promise.reject(new Error('A \"url\" property or function must be specified'));\n    }\n\n    model.remote.synchronising = true;\n\n    // model.trigger('request', model, xhr, options);\n    switch (method) {\n      case 'create':\n        return this._create(model, options)\n          .then((val) => {\n            model.remote.synchronising = false;\n            return val;\n          })\n          .catch((err) => {\n            model.remote.synchronising = false;\n            return Promise.reject(err);\n          });\n\n      case 'update':\n        // todo\n        model.remote.synchronising = false;\n        return Promise.reject(new Error('Updating the model is not possible yet.'));\n\n      case 'read':\n        // todo\n        model.remote.synchronising = false;\n        return Promise.reject(new Error('Reading the model is not possible yet.'));\n\n      case 'delete':\n        // todo\n        model.remote.synchronising = false;\n        return Promise.reject(new Error('Deleting the model is not possible yet.'));\n\n      default:\n        model.remote.synchronising = false;\n        return Promise.reject(new Error(`No such remote sync option: ${method}`));\n    }\n  },\n\n  /**\n   * Posts a record to remote server.\n   * @param model\n   * @param options\n   */\n  _create(model, options) {\n    const that = this;\n\n    // async call to get the form data\n    return that._getModelData(model).then(data => that._ajaxModel(data, model, options));\n  },\n\n  _ajaxModel(data, model, options) {\n    const that = this;\n    const promise = new Promise((fulfill, reject) => {\n      // get timeout\n      let timeout = options.timeout || that.timeout || 30000; // 30s\n      timeout = typeof timeout === 'function' ? timeout() : timeout;\n\n      const url = that.host_url + API_BASE + API_VER + API_SAMPLES_PATH;\n      const xhr = (options.xhr = Backbone.ajax({\n        url,\n        type: 'POST',\n        data,\n        headers: {\n          authorization: that.getUserAuth(),\n          'x-api-key': that.api_key,\n        },\n        processData: false,\n        contentType: false,\n        timeout,\n      }));\n\n      xhr.done(responseData => fulfill(responseData));\n\n      xhr.fail((jqXHR, textStatus, errorThrown) => {\n        if (jqXHR.status === 409) {\n          // duplicate occurred - this fixes only occurrence duplicates!\n          // todo: remove once this is sorted\n          const responseData = {\n            data: {\n              id: null,\n              external_key: null,\n              occurrences: [],\n            },\n          };\n\n          jqXHR.responseJSON.errors.forEach((error) => {\n            responseData.data.id = error.sample_id;\n            responseData.data.external_key = error.sample_external_key;\n            responseData.data.occurrences.push({\n              id: error.id,\n              external_key: error.external_key,\n            });\n          });\n\n          fulfill(responseData);\n          return;\n        }\n\n        let error = new Error(errorThrown);\n        if (jqXHR.responseJSON && jqXHR.responseJSON.errors) {\n          const message = jqXHR.responseJSON.errors.reduce(\n            (name, err) => `${name}${err.title}\\n`,\n            ''\n          );\n          error = new Error(message);\n        }\n        try {\n          model.trigger('error:remote', error);\n        } catch (e) {\n          /* continue on listener error */\n        }\n        reject(error);\n      });\n\n      try {\n        model.trigger('request:remote', model, xhr, options);\n      } catch (e) {\n        /* continue on listener error */\n      }\n    });\n\n    return promise;\n  },\n\n  _remoteCreateParse(model, responseData) {\n    // get new ids\n    const remoteIDs = {};\n\n    // recursively extracts ids from collection of response models\n    function getIDs(data) {\n      remoteIDs[data.external_key] = data.id;\n      if (data.samples) data.samples.forEach(subModel => getIDs(subModel));\n      if (data.occurrences) data.occurrences.forEach(subModel => getIDs(subModel));\n      // Images don't store external_keys yet.\n      // if (data.media) data.media.forEach(subModel => getIDs(subModel));\n    }\n\n    getIDs(responseData);\n\n    this._setNewRemoteID(model, remoteIDs);\n  },\n\n  /**\n   * Sets new server IDs to the models.\n   */\n  _setNewRemoteID(model, remoteIDs) {\n    // set new remote ID\n    const remoteID = remoteIDs[model.cid];\n    if (remoteID) {\n      model.id = remoteID;\n    }\n\n    // do that for all submodels\n    if (model.samples) {\n      model.samples.forEach(subModel => this._setNewRemoteID(subModel, remoteIDs));\n    }\n    if (model.occurrences) {\n      model.occurrences.forEach(subModel => this._setNewRemoteID(subModel, remoteIDs));\n    }\n    if (model.media) {\n      model.media.forEach(subModel => this._setNewRemoteID(subModel, remoteIDs));\n    }\n  },\n\n  _getModelData(model) {\n    if (!model) {\n      throw new Error('No model passed to _getModelData.');\n    }\n\n    const that = this;\n\n    // get submission model and all the media\n    const [submission, media] = model._getSubmission();\n    submission.type = 'samples';\n\n    // allow updating the submission data if onSend function is set\n    if (this.onSend) {\n      return this.onSend(submission, media).then((data) => {\n        const [newSubmission, newMedia] = data;\n        return that._normaliseModelData(newSubmission, newMedia);\n      });\n    }\n\n    return this._normaliseModelData(submission, media);\n  },\n\n  /**\n   * Creates a stringified JSON representation of the model or a FormData object.\n   * If the media is present then it creates a FormData so that the record\n   * could be submitted in one call.\n   */\n  _normaliseModelData(submission, media) {\n    // stringify submission\n    const stringSubmission = JSON.stringify({\n      data: submission,\n    });\n\n    // with media send form-data in one request\n    if (media.length) {\n      const formData = new FormData(); // for submission\n      formData.append('submission', stringSubmission);\n      // append media\n      return this._mediaAppend(media, formData).then(() => Promise.resolve(formData));\n    }\n\n    return Promise.resolve(stringSubmission);\n  },\n\n  _mediaAppend(media, formData) {\n    const mediaProcesses = [];\n    media.forEach((mediaModel) => {\n      const imagePromise = new Promise((_fulfill) => {\n        const url = mediaModel.getURL();\n        const type = mediaModel.get('type');\n        const name = mediaModel.cid;\n\n        function onSuccess(err, img, dataURI, blob) {\n          // can provide both image/jpeg and jpeg\n          let extension = type;\n          let mediaType = type;\n          if (type.match(/image.*/)) {\n            extension = type.split('/')[1];\n          } else {\n            mediaType = `image/${mediaType}`;\n          }\n          if (!blob) {\n            blob = helpers.dataURItoBlob(dataURI, mediaType);\n          }\n\n          formData.append(name, blob, `${name}.${extension}`);\n          _fulfill();\n        }\n\n        if (!helpers.isDataURL(url)) {\n          // load image\n          const xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'blob';\n          xhr.onload = () => {\n            onSuccess(null, null, null, xhr.response);\n          };\n          // todo check error case\n\n          xhr.send();\n        } else {\n          onSuccess(null, null, url);\n        }\n      });\n      mediaProcesses.push(imagePromise);\n    });\n\n    return Promise.all(mediaProcesses);\n  },\n\n  /**\n   * Returns an object with attributes and their values\n   * mapped for warehouse submission.\n   *\n   * @returns {*}\n   */\n  _getSubmission(options = {}) {\n    const that = this;\n    const sampleKeys = typeof this.keys === 'function' ? this.keys() : this.keys;\n    const keys = $.extend(true, Sample.keys, sampleKeys); // warehouse keys/values to transform\n    let media = [...this.media.models]; // all media within this and child models\n\n    const submission = {\n      id: this.id,\n      external_key: this.cid,\n      survey_id: this.metadata.survey_id,\n      input_form: this.metadata.input_form,\n      fields: {},\n      media: [],\n    };\n\n    // transform attributes\n    Object.keys(this.attributes).forEach((attr) => {\n      // no need to send attributes with no values\n      let value = that.attributes[attr];\n      if (!value) return;\n\n      if (!keys[attr]) {\n        if (attr !== 'email') {\n          console.warn(`Indicia: no such key: ${attr}`);\n        }\n        submission.fields[attr] = value;\n        return;\n      }\n\n      const warehouseAttr = keys[attr].id || attr;\n\n      // check if has values to choose from\n      if (keys[attr].values) {\n        if (typeof keys[attr].values === 'function') {\n          // get a value from a function\n          value = keys[attr].values(value, submission, that);\n        } else if (_.isArray(value)) {\n          // the attribute has multiple values\n          value = value.map(v => keys[attr].values[v]);\n        } else {\n          value = keys[attr].values[value];\n        }\n      }\n\n      // don't need to send null or undefined\n      if (value) {\n        submission.fields[warehouseAttr] = value;\n      }\n    });\n\n    const sampleOptions = _.extend({}, options);\n    this.metadata.training && (sampleOptions.training = this.metadata.training);\n    this.metadata.release_status && (sampleOptions.release_status = this.metadata.release_status);\n    this.metadata.record_status && (sampleOptions.record_status = this.metadata.record_status);\n    this.metadata.sensitive && (sampleOptions.sensitive = this.metadata.sensitive);\n    this.metadata.confidential && (sampleOptions.confidential = this.metadata.confidential);\n    this.metadata.sensitivity_precision &&\n      (sampleOptions.sensitivity_precision = this.metadata.sensitivity_precision);\n\n    // transform sub models\n    // occurrences\n    const [occurrences, occurrencesMedia] = this.occurrences._getSubmission(sampleOptions);\n    submission.occurrences = occurrences;\n    media = media.concat(occurrencesMedia);\n\n    // samples\n    const [samples, samplesMedia] = this.samples._getSubmission(sampleOptions);\n    submission.samples = samples;\n    media = media.concat(samplesMedia);\n\n    // media - does not return any media-models only JSON data about them\n    const [mediaSubmission] = this.media._getSubmission(sampleOptions);\n    submission.media = mediaSubmission;\n\n    return [submission, media];\n  },\n\n  toJSON() {\n    let occurrences;\n    if (!this.occurrences) {\n      occurrences = [];\n      console.warn('toJSON occurrences missing');\n    } else {\n      occurrences = this.occurrences.toJSON();\n    }\n\n    let samples;\n    if (!this.samples) {\n      samples = [];\n      console.warn('toJSON samples missing');\n    } else {\n      samples = this.samples.toJSON();\n    }\n\n    let media;\n    if (!this.media) {\n      media = [];\n      console.warn('toJSON media missing');\n    } else {\n      media = this.media.toJSON();\n    }\n\n    const data = {\n      id: this.id,\n      cid: this.cid,\n      metadata: this.metadata,\n      attributes: this.attributes,\n      occurrences,\n      samples,\n      media,\n    };\n\n    return data;\n  },\n\n  /**\n   * Sync statuses:\n   * synchronising, synced, remote, server, changed_remotely, changed_server, conflict\n   */\n  getSyncStatus() {\n    const meta = this.metadata;\n    // on server\n    if (this.remote.synchronising) {\n      return SYNCHRONISING;\n    }\n\n    if (this.id >= 0) {\n      // fully initialized\n      if (meta.synced_on) {\n        // changed_remotely\n        if (meta.synced_on < meta.updated_on) {\n          // changed_server - conflict!\n          if (meta.synced_on < meta.server_on) {\n            return CONFLICT;\n          }\n          return CHANGED_LOCALLY;\n          // changed_server\n        } else if (meta.synced_on < meta.server_on) {\n          return CHANGED_SERVER;\n        }\n        return SYNCED;\n\n        // partially initialized - we know the record exists on\n        // server but has not yet been downloaded\n      }\n      return SERVER;\n\n      // local only\n    }\n    return LOCAL;\n  },\n\n  /**\n   * Returns child occurrence.\n   * @param index\n   * @returns {*}\n   */\n  getOccurrence(index = 0) {\n    return this.occurrences.at(index);\n  },\n\n  /**\n   * Returns child sample.\n   * @param index\n   * @returns {*}\n   */\n  getSample(index = 0) {\n    return this.samples.at(index);\n  },\n\n  /**\n   * Returns child media.\n   * @param index\n   * @returns {*}\n   */\n  getMedia(index = 0) {\n    return this.media.at(index);\n  },\n\n  getUserAuth() {\n    if (!this.user || !this.password) {\n      return null;\n    }\n\n    const user = typeof this.user === 'function' ? this.user() : this.user;\n    const password = typeof this.password === 'function' ? this.password() : this.password;\n    const basicAuth = btoa(`${user}:${password}`);\n\n    return `Basic  ${basicAuth}`;\n  },\n\n  _parseModels(models, Model) {\n    if (!models) {\n      // init empty samples collection\n      return new Collection([], { model: Model });\n    }\n\n    const that = this;\n\n    const modelsArray = [];\n    _.each(models, (model) => {\n      if (model instanceof Model) {\n        model.setParent(that);\n        modelsArray.push(model);\n      } else {\n        const modelOptions = _.extend(model, { parent: that });\n        const newModel = new Model(model.attributes, modelOptions);\n        modelsArray.push(newModel);\n      }\n    });\n\n    return new Collection(modelsArray, { model: Model });\n  },\n\n  isNew() {\n    return !this.id;\n  },\n\n  // Fetch the model from the server, merging the response with the model's\n  // local attributes. Any changed attributes will trigger a \"change\" event.\n  fetch(options) {\n    const model = this;\n    const promise = new Promise((fulfill, reject) => {\n      options = _.extend({ parse: true }, options);\n      return this.sync('read', this, options)\n        .then((resp) => {\n          // set the returned model's data\n          model.id = resp.id;\n          model.metadata = resp.metadata;\n          if (!model.set(resp.attributes, options)) return false;\n\n          // initialise sub models\n          model.occurrences = model._parseModels(resp.occurrences, model.Occurrence);\n          model.samples = model._parseModels(resp.samples, Sample);\n          model.media = model._parseModels(resp.media, model.Media);\n\n          try {\n            model.trigger('sync', model, resp, options);\n          } catch (e) {\n            /* continue on listener error */\n          }\n\n          fulfill(model);\n          return null;\n        })\n        .catch(reject);\n    });\n\n    return promise;\n  },\n\n  _getDefaultMetadata(options) {\n    const metadata = typeof this.metadata === 'function' ? this.metadata() : this.metadata;\n    const today = new Date();\n    const defaults = {\n      survey_id: options.survey_id,\n      input_form: options.input_form,\n\n      created_on: today,\n      updated_on: today,\n\n      synced_on: null, // set when fully initialized only\n      server_on: null, // updated on server\n    };\n\n    return $.extend(true, defaults, metadata, options.metadata);\n  },\n});\n\n_.extend(Sample.prototype, syncHelpers);\n\n/**\n * Warehouse attributes and their values.\n */\nSample.keys = {\n  date: { id: 'date' },\n  sample_method_id: { id: 'sample_method_id' },\n  location: { id: 'entered_sref' },\n  location_type: {\n    id: 'entered_sref_system',\n    values: {\n      british: 'OSGB', // for British National Grid\n      irish: 'OSIE', // for Irish Grid\n      channel: 'utm30ed50', // for Channel Islands Grid\n      latlon: 4326, // for Latitude and Longitude in decimal form (WGS84 datum)\n    },\n  },\n  form: { id: 'input_form' },\n  group: { id: 'group_id' },\n  comment: { id: 'comment' },\n};\n\nexport { Sample as default };\n","import $ from 'jquery';\nimport { API_BASE, API_VER, API_REPORTS_PATH } from './constants';\n\nclass Report {\n  constructor(options = {}) {\n    this.host_url = options.host_url || this.host_url;\n    this.user = options.user || this.user;\n    this.password = options.password || this.password;\n    this.report = options.report || this.report;\n\n    this.api_key = options.api_key || this.api_key;\n    this.params = options.params || this.params;\n    this.timeout = options.timeout || 180000; // 3 min;\n  }\n\n  run(params) {\n    const that = this;\n    const promise = new Promise((fulfill, reject) => {\n      const url = this.host_url + API_BASE + API_VER + API_REPORTS_PATH + this.report;\n\n      params = $.extend(params || that.params, { api_key: that.api_key });\n      $.get({\n        url,\n        data: params,\n        timeout: that.timeout,\n        headers: {\n          authorization: that.getUserAuth(),\n          'x-api-key': that.api_key,\n        },\n        success: fulfill,\n        error: (jqXHR, textStatus, errorThrown) => {\n          let error = new Error(errorThrown);\n          if (jqXHR.responseJSON && jqXHR.responseJSON.errors) {\n            const message = jqXHR.responseJSON.errors.reduce(\n              (name, err) => `${name}${err.title}\\n`,\n              ''\n            );\n            error = new Error(message);\n          }\n          reject(error);\n        },\n      });\n    });\n\n    return promise;\n  }\n\n  getUserAuth() {\n    if (!this.user || !this.password) {\n      return null;\n    }\n\n    const user = typeof this.user === 'function' ? this.user() : this.user;\n    const password = typeof this.password === 'function' ? this.password() : this.password;\n    const basicAuth = btoa(`${user}:${password}`);\n\n    return `Basic  ${basicAuth}`;\n  }\n}\n\nexport default Report;\n","import _ from 'underscore';\nimport Store from './Store';\nimport Collection from './Collection';\nimport Sample from './Sample';\nimport Occurrence from './Occurrence';\nimport Media from './Media';\nimport Report from './Report';\nimport * as CONST from './constants';\n\nconst Indicia = {\n  /* global LIB_VERSION */\n  VERSION: LIB_VERSION, // replaced by build\n\n  Store,\n  Collection,\n\n  Sample,\n  Occurrence,\n  Media,\n  Report,\n};\n\n_.extend(Indicia, CONST);\n\nexport { Indicia as default };\n"],"names":["Store","options","that","localForage","ready","Promise","resolve","reject","customDriversPromise","_resolve","driverOrder","LocalForage","defineDriver","then","dbConfig","name","storeName","version","drivers","_getDriverOrder","DB","createInstance","setDriver","catch","method","model","cid","find","findAll","create","update","destroy","Error","_callWhenReady","Backbone","Collection","models","length","toWait","_","each","collectionModel","store","push","save","all","id","key","setItem","toJSON","getItem","data","iterate","value","clone","removeItem","func","bind","map","driver","INDEXEDDB","WEBSQL","LOCALSTORAGE","_driver","console","error","extend","constructor","prototype","apply","arguments","comparator","a","metadata","created_on","size","collection","sync","fetch","parse","resp","reset","trigger","e","remote","_syncRemote","synchronising","_getSubmission","submission","media","forEach","modelSubmission","modelMedia","concat","_prepareModel","_isModel","attrs","attributes","validationError","API_BASE","API_VER","API_SAMPLES_PATH","API_REPORTS_PATH","SYNCHRONISING","SYNCED","LOCAL","SERVER","CHANGED_LOCALLY","CHANGED_SERVER","CONFLICT","getNewUUID","replace","c","r","Math","random","v","toString","dataURItoBlob","dataURI","fileType","binary","atob","split","array","i","charCodeAt","Blob","Uint8Array","type","isDataURL","string","normalized","regex","match","isPlainObject","obj","class2type","types","toLowerCase","String","call","isWindow","nodeType","hasOwn","undefined","isEmptyObject","formatDate","dateToFormat","date","now","Date","day","month","reg","regDash","regDashInv","dateArray","test","window","parseInt","getDate","slice","getMonth","getFullYear","helpers","val","validate","wait","set","_validate","isNew","patch","parent","err","_remoteCreateParse","timeNow","server_on","updated_on","synced_on","promise","fulfill","finalise","stopListening","noSave","THUMBNAIL_WIDTH","THUMBNAIL_HEIGHT","Media","Model","setParent","defaults","result","changed","initialize","getURL","get","on","resize","MAX_WIDTH","MAX_HEIGHT","args","image","addThumbnail","re","width","getDataURI","height","validateRemote","errors","isEmpty","syncHelpers","file","FileReader","reader","onload","event","target","Image","src","readAsDataURL","maxWidth","maxHeight","res","canvas","document","createElement","getContext","drawImage","toDataURL","Occurrence","keys","_getDefaultMetadata","mediaArray","modelOptions","addMedia","mediaObj","add","getMedia","index","at","modelErrors","taxon","mediaModel","mediaID","warn","occKeys","$","external_key","fields","training","release_status","record_status","sensitive","confidential","sensitivity_precision","Object","attr","warehouseAttr","values","isArray","mediaSubmission","today","comment","Sample","host_url","api_key","user","password","onSend","defaultAttrs","location_type","occurrences","_parseModels","samples","addSample","sample","addOccurrence","occurrence","location","sampleID","occurrenceID","_create","_getModelData","_ajaxModel","timeout","url","xhr","ajax","headers","authorization","getUserAuth","processData","contentType","done","responseData","fail","jqXHR","textStatus","errorThrown","status","responseJSON","sample_id","sample_external_key","message","reduce","title","remoteIDs","getIDs","subModel","_setNewRemoteID","remoteID","newSubmission","newMedia","_normaliseModelData","stringSubmission","JSON","stringify","formData","FormData","append","_mediaAppend","mediaProcesses","imagePromise","_fulfill","onSuccess","img","blob","extension","mediaType","XMLHttpRequest","open","responseType","response","send","sampleKeys","survey_id","input_form","sampleOptions","occurrencesMedia","samplesMedia","getSyncStatus","meta","getOccurrence","getSample","basicAuth","btoa","modelsArray","newModel","sample_method_id","british","irish","channel","latlon","form","group","Report","report","params","success","Indicia","VERSION","CONST"],"mappings":"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"}