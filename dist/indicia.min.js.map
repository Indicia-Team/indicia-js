{"version":3,"file":"indicia.min.js","sources":["../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../src/Store.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../src/Collection.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../src/constants.js","../src/helpers.js","../src/sync_helpers.js","../src/Media.js","../src/Occurrence.js","../src/Sample.js","../src/main.js","../src/Report.js"],"sourcesContent":["function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","import Backbone from 'backbone';\nimport LocalForage from 'localforage';\nimport _ from 'underscore';\n\n/*!\n Inspired by localForage Backbone Adapter\n */\n\n// For now, we aren't complicated: just set a property off Backbone to\n// serve as our export point.\nclass Store {\n  constructor(options = {}) {\n    const that = this;\n\n    // initialize db\n    this.localForage = null;\n    this.ready = new Promise((resolve, reject) => {\n      // check custom drivers (eg. SQLite)\n      const customDriversPromise = new Promise(_resolve => {\n        if (options.driverOrder && typeof options.driverOrder[0] === 'object') {\n          LocalForage.defineDriver(options.driverOrder[0]).then(_resolve);\n        } else {\n          _resolve();\n        }\n      });\n\n      // config\n      customDriversPromise.then(() => {\n        const dbConfig = {\n          name: options.name || 'indicia',\n          storeName: options.storeName || 'models',\n        };\n\n        if (options.version) {\n          dbConfig.version = options.version;\n        }\n\n        const driverOrder = options.driverOrder || [\n          'indexeddb',\n          'websql',\n          'localstorage',\n        ];\n        const drivers = Store._getDriverOrder(driverOrder);\n        const DB = options.LocalForage || LocalForage;\n\n        // init\n        that.localForage = DB.createInstance(dbConfig);\n        that.localForage\n          .setDriver(drivers)\n          .then(() => {\n            resolve(that.localForage);\n          })\n          .catch(reject);\n      });\n    });\n  }\n\n  static _getDriverOrder(driverOrder) {\n    return driverOrder.map(driver => {\n      switch (driver) {\n        case 'indexeddb':\n          return LocalForage.INDEXEDDB;\n        case 'websql':\n          return LocalForage.WEBSQL;\n        case 'localstorage':\n          return LocalForage.LOCALSTORAGE;\n        default:\n          // custom\n          if (typeof driver === 'object' && driver._driver) {\n            return driver._driver;\n          }\n          return console.error('No such db driver!');\n      }\n    });\n  }\n\n  sync(method, model, options) {\n    switch (method) {\n      case 'read':\n        return model.cid\n          ? this.find(model, options)\n          : this.findAll(model, options);\n      case 'create':\n        return this.create(model, options);\n      case 'update':\n        return this.update(model, options);\n      case 'delete':\n        return this.destroy(model, options);\n      default:\n        return Promise.reject(\n          new Error(`Local Sync method not found ${method}`)\n        );\n    }\n  }\n\n  save(model, options) {\n    return this._callWhenReady(() => {\n      // save collection\n      if (model instanceof Backbone.Collection) {\n        if (!model.models.length) {\n          return Promise.resolve();\n        }\n\n        const toWait = [];\n        _.each(model.models, collectionModel => {\n          if (collectionModel.store) {\n            toWait.push(collectionModel.save(null, options));\n          }\n        });\n        return Promise.all(toWait);\n      }\n\n      // early return if no id or cid\n      if (!model.id && !model.cid) {\n        return Promise.reject(new Error('Invalid model passed to store'));\n      }\n\n      const key = model.cid;\n      return this.localForage\n        .setItem(key, model.toJSON())\n        .then(() => Promise.resolve()); // don't return anything to update the model\n    });\n  }\n\n  create(model, options) {\n    // We always have an ID available by this point, so we just call\n    // the update method.\n    return this.update(model, options);\n  }\n\n  update(model, options) {\n    return this.save(model, options);\n  }\n\n  find(model) {\n    return this._callWhenReady(() =>\n      // eslint-disable-line\n      this.localForage.getItem(model.cid).then(data => {\n        if (!data) {\n          return Promise.reject(\n            `LocalForage entry with ${model.cid} as key not found`\n          );\n        }\n        return data;\n      })\n    );\n  }\n\n  // Only used by `Backbone.Collection#sync`.\n  findAll() {\n    return this._callWhenReady(() => {\n      // build up samples\n      const models = [];\n      return this.localForage\n        .iterate(value => {\n          models.push(value);\n        })\n        .then(() => Promise.resolve(models));\n    });\n  }\n\n  destroy(model) {\n    return this._callWhenReady(() => {\n      // collection destroy\n      if (model instanceof Backbone.Collection) {\n        if (!model.models.length) {\n          return Promise.resolve();\n        }\n\n        const toWait = [];\n        // need to clone:\n        // http://stackoverflow.com/questions/10858935/cleanest-way-to-destroy-every-model-in-a-collection-in-backbone\n        _.each(_.clone(model.models), collectionModel => {\n          if (collectionModel.store) toWait.push(collectionModel.destroy());\n        });\n        return Promise.all(toWait);\n      }\n\n      // early return if no id or cid\n      if (!model.id && !model.cid) {\n        return Promise.reject(new Error('Invalid model passed to store'));\n      }\n\n      const key = model.cid;\n      return this.localForage\n        .removeItem(key)\n        .then(() => Promise.resolve(model.toJSON()));\n    });\n  }\n\n  _callWhenReady(func) {\n    const that = this;\n    return this.ready.then(() => func.bind(that)());\n  }\n}\n\nexport default Store;\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","/** *********************************************************************\n * COLLECTION MODULE\n **********************************************************************/\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport Store from './Store';\n\nconst Collection = Backbone.Collection.extend({\n  constructor(attributes = {}, options = {}) {\n    this.store = options.store || this.store || new Store();\n\n    if (!options.model && !this.model) {\n      console.error(\"Collection's model must be provided\");\n      return;\n    }\n\n    Backbone.Collection.prototype.constructor.apply(this, arguments);\n  },\n\n  comparator(a) {\n    return a.metadata.created_on;\n  },\n\n  size() {\n    return Promise.resolve(this.length);\n  },\n\n  /**\n   * New function to save all models within the collection.\n   * @param models\n   * @param options\n   */\n  save(collection, options) {\n    return this.sync('create', collection || this, options);\n  },\n\n  /**\n   * New function to destroy all models within the collection.\n   * @returns {*}\n   */\n  destroy(collection, options) {\n    return this.sync('delete', collection || this, options);\n  },\n\n  /**\n   * New function to fetch all models within the collection.\n   * @returns {*}\n   */\n  fetch(options) {\n    options = _.extend({ parse: true }, options);\n    const collection = this;\n\n    return this.sync('read', this, options).then(resp => {\n      const method = options.reset ? 'reset' : 'set';\n\n      collection[method](resp, options);\n      try {\n        collection.trigger('sync', collection, resp, options);\n      } catch (e) {\n        /* continue on listener error */\n      }\n    });\n  },\n\n  /**\n   * Synchronises the collection.\n   * @param method\n   * @param model\n   * @param options\n   */\n  sync(method, collection, options = {}) {\n    if (options.remote) {\n      return this._syncRemote(method, collection, options);\n    }\n\n    if (!this.store) {\n      return Promise.reject(\n        new Error('Trying to locally sync a collection without a store')\n      );\n    }\n\n    try {\n      this.trigger('request', collection, null, options);\n    } catch (e) {\n      /* continue on listener error */\n    }\n    return this.store.sync(method, collection, options);\n  },\n\n  /**\n   * Syncs the collection to the remote server.\n   * Returns on success: model, response, options\n   */\n  _syncRemote(method, collection, options) {\n    collection.synchronising = true;\n\n    // model.trigger('request', model, xhr, options);\n    switch (method) {\n      case 'create': {\n        if (!collection.models.length) {\n          return Promise.resolve();\n        }\n        const toWait = [];\n        _.each(collection.models, model => {\n          if (model.store) toWait.push(model.save(null, options));\n        });\n        return Promise.all(toWait);\n      }\n      case 'update':\n        // todo\n        collection.synchronising = false;\n        return Promise.reject(\n          new Error('Updating the model is not possible yet.')\n        );\n\n      case 'read':\n        // todo\n        collection.synchronising = false;\n        return Promise.reject(\n          new Error('Reading the model is not possible yet.')\n        );\n\n      case 'delete':\n        // todo\n        collection.synchronising = false;\n        return Promise.reject(\n          new Error('Deleting the model is not possible yet.')\n        );\n\n      default:\n        collection.synchronising = false;\n        return Promise.reject(\n          new Error(`No such remote sync option: ${method}`)\n        );\n    }\n  },\n\n  /**\n   * Returns an object with attributes and their values\n   * mapped for warehouse submission.\n   *\n   * @returns {*}\n   */\n  _getSubmission(options) {\n    const submission = [];\n    let media = [];\n\n    // transform its models\n    this.models.forEach(model => {\n      const [modelSubmission, modelMedia] = model._getSubmission(options);\n      submission.push(modelSubmission);\n      media = media.concat(modelMedia);\n    });\n\n    return [submission, media];\n  },\n\n  // Prepare a hash of attributes (or other model) to be added to this\n  // collection.\n  _prepareModel(options) {\n    if (this._isModel(options)) {\n      if (!options.collection) options.collection = this;\n      return options;\n    }\n\n    const attrs = options.attributes;\n\n    options = options ? _.clone(options) : {};\n    options.collection = this;\n    options.store = this.store;\n    const model = new this.model(attrs, options); // eslint-disable-line\n    if (!model.validationError) return model;\n    this.trigger('invalid', this, model.validationError, options);\n    return false;\n  },\n});\n\nexport { Collection as default };\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/* eslint-disable */\nexport const API_BASE = 'api/',\n  API_VER = 'v1',\n  API_SAMPLES_PATH = '/samples',\n  API_REPORTS_PATH = '/reports',\n  SYNCHRONISING = 0,\n  SYNCED = 1,\n  LOCAL = 2,\n  SERVER = 3,\n  CHANGED_LOCALLY = 4,\n  CHANGED_SERVER = 5,\n  CONFLICT = -1;\n","/** *********************************************************************\n * HELPER FUNCTIONS\n **********************************************************************/\n\n/**\n * Generate UUID.\n */\n/* eslint-disable no-bitwise */\nconst getNewUUID = () =>\n  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n\n    return v.toString(16);\n  });\n/* eslint-enable no-bitwise */\n\n/**\n * Converts DataURI object to a Blob.\n *\n * @param {type} dataURI\n * @param {type} fileType\n * @returns {undefined}\n */\nconst dataURItoBlob = (dataURI, fileType) => {\n  const binary = atob(dataURI.split(',')[1]);\n  const array = [];\n  for (let i = 0; i < binary.length; i++) {\n    array.push(binary.charCodeAt(i));\n  }\n  return new Blob([new Uint8Array(array)], {\n    type: fileType,\n  });\n};\n\n// Detecting data URLs\n// https://gist.github.com/bgrins/6194623\n\n// data URI - MDN https://developer.mozilla.org/en-US/docs/data_URIs\n// The 'data' URL scheme: http://tools.ietf.org/html/rfc2397\n// Valid URL Characters: http://tools.ietf.org/html/rfc2396#section2\nconst isDataURL = string => {\n  if (!string) {\n    return false;\n  }\n  const normalized = string.toString(); // numbers\n\n  /* eslint-disable no-useless-escape, max-len */\n  const regex = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$/i;\n  return !!normalized.match(regex);\n};\n/* eslint-enable no-useless-escape, max-len  */\n\n// From jQuery 1.4.4 .\n/* eslint-disable */\nconst isPlainObject = obj => {\n  function type(obj) {\n    const class2type = {};\n    const types = 'Boolean Number String Function Array Date RegExp Object'.split(\n      ' '\n    );\n    for (let i = 0; i < types.length; i++) {\n      class2type[`[object ${types[i]}]`] = types[i].toLowerCase();\n    }\n    return obj == null\n      ? String(obj)\n      : class2type[toString.call(obj)] || 'object';\n  }\n\n  function isWindow(obj) {\n    return obj && typeof obj === 'object' && 'setInterval' in obj;\n  }\n\n  // Must be an Object.\n  // Because of IE, we also have to check the presence of the constructor property.\n  // Make sure that DOM nodes and window objects don't pass through, as well\n  if (!obj || type(obj) !== 'object' || obj.nodeType || isWindow(obj)) {\n    return false;\n  }\n\n  // Not own constructor property must be Object\n  if (\n    obj.constructor &&\n    !hasOwn.call(obj, 'constructor') &&\n    !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')\n  ) {\n    return false;\n  }\n\n  // Own properties are enumerated firstly, so to speed up,\n  // if last one is own, then all properties are own.\n\n  let key;\n  for (key in obj) {\n  }\n\n  return key === undefined || hasOwn.call(obj, key);\n};\n\n// checks if the object has any elements.\nconst isEmptyObject = obj => {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n};\n/* eslint-enable */\n\n/**\n * Formats the date to Indicia Warehouse format.\n * @param date String or Date object\n * @returns String formatted date\n */\nconst formatDate = dateToFormat => {\n  let date = dateToFormat;\n  let now = new Date();\n  let day = 0;\n  let month = 0;\n  const reg = /\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  const regDash = /\\d{4}-\\d{1,2}-\\d{1,2}$/;\n  const regDashInv = /\\d{1,2}-\\d{1,2}-\\d{4}$/;\n  let dateArray = [];\n\n  if (typeof date === 'string') {\n    dateArray = date.split('-');\n    // check if valid\n    if (reg.test(date)) {\n      return date;\n      // dashed\n    } else if (regDash.test(date)) {\n      date = new Date(\n        window.parseInt(dateArray[0]),\n        window.parseInt(dateArray[1]) - 1,\n        window.parseInt(dateArray[2])\n      );\n      // inversed dashed\n    } else if (regDashInv.test(date)) {\n      date = new Date(\n        window.parseInt(dateArray[2]),\n        window.parseInt(dateArray[1]) - 1,\n        window.parseInt(dateArray[0])\n      );\n    }\n  }\n\n  now = date || now;\n  day = `0${now.getDate()}`.slice(-2);\n  month = `0${now.getMonth() + 1}`.slice(-2);\n\n  return `${day}/${month}/${now.getFullYear()}`;\n};\n\nexport default {\n  getNewUUID,\n  dataURItoBlob,\n  isDataURL,\n  isPlainObject,\n  isEmptyObject,\n  formatDate,\n};\n","import _ from 'underscore';\n\nconst helpers = {\n  save(key, val, options) {\n    const model = this;\n\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    let attrs;\n    if (key == null || typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options = _.extend({ validate: true, parse: true }, options);\n    const wait = options.wait;\n\n    // If we're not waiting and attributes exist, save acts as\n    // `set(attr).save(null, opts)` with validation. Otherwise, check if\n    // the model will be valid when the attributes, if any, are set.\n    if (attrs && !wait) {\n      if (!this.set(attrs, options)) return false;\n    } else if (!this._validate(attrs, options)) {\n      return false;\n    }\n\n    // After a successful server-side save, the client is (optionally)\n    // updated with the server-side state.\n    const attributes = model.attributes;\n\n    // Set temporary attributes if `{wait: true}` to properly find new ids.\n    if (attrs && wait) model.attributes = _.extend({}, attributes, attrs);\n\n    let method = 'create';\n    if (!model.isNew() && options.remote) {\n      method = options.patch ? 'patch' : 'update';\n    }\n    if (method === 'patch' && !options.attrs) options.attrs = attrs;\n\n    // parent save\n    if (model.parent && !options.remote) {\n      return model.parent\n        .save(key, val, options)\n        .then(() => {\n          // Ensure attributes are restored during synchronous saves.\n          model.attributes = attributes;\n          try {\n            model.trigger('sync', model, null, options);\n          } catch (e) {\n            /* continue on listener error */\n          }\n          return model;\n        })\n        .catch(err => {\n          try {\n            model.trigger('error', err);\n          } catch (e) {\n            /* continue on listener error */\n          }\n          return Promise.reject(err);\n        });\n    }\n\n    // model save\n    return model\n      .sync(method, model, options)\n      .then(resp => {\n        if (options.remote) {\n          // update the model and occurrences with new remote IDs\n          model._remoteCreateParse(model, resp.data);\n\n          // update metadata\n          const timeNow = new Date();\n          model.metadata.server_on = timeNow;\n          model.metadata.updated_on = timeNow;\n          model.metadata.synced_on = timeNow;\n\n          // Ensure attributes are restored during synchronous saves.\n          model.attributes = attributes;\n\n          // save model's changes locally\n          return model.save().then(() => {\n            try {\n              model.trigger('sync:remote', model, resp, options);\n            } catch (e) {\n              /* continue on listener error */\n            }\n            return model;\n          });\n        }\n\n        try {\n          model.trigger('sync', model, resp, options);\n        } catch (e) {\n          /* continue on listener error */\n        }\n        return model;\n      })\n      .catch(err => {\n        try {\n          model.trigger('error', err);\n        } catch (e) {\n          /* continue on listener error */\n        }\n        return Promise.reject(err);\n      });\n  },\n\n  /**\n   *\n   * @param options\n   * @returns {Promise}\n   */\n  destroy(options = {}) {\n    const model = this;\n    const collection = this.collection; // keep reference for triggering\n\n    const promise = new Promise((fulfill, reject) => {\n      function finalise() {\n        // removes from all collections etc\n        model.stopListening();\n        try {\n          model.trigger('destroy', model, collection, options);\n        } catch (e) {\n          /* continue on listener error */\n        }\n\n        if (!options.noSave) {\n          // parent save the changes permanently\n          model.parent.save(null, options).then(() => {\n            try {\n              model.trigger('sync', model, null, options);\n            } catch (e) {\n              /* continue on listener error */\n            }\n            fulfill(model);\n          });\n        } else {\n          try {\n            model.trigger('sync', model, null, options);\n          } catch (e) {\n            /* continue on listener error */\n          }\n          fulfill(model);\n        }\n      }\n\n      if (model.parent) {\n        if (options.remote) {\n          // destroy remotely\n          model.sync('delete', model, options).then(finalise);\n        } else {\n          finalise();\n        }\n      } else {\n        // destroy locally/remotely\n        model\n          .sync('delete', model, options)\n          .then(() => {\n            // removes from all collections etc\n            model.stopListening();\n            try {\n              model.trigger('destroy', model, collection, options);\n            } catch (e) {\n              /* continue on listener error */\n            }\n            try {\n              model.trigger('sync', model, null, options);\n            } catch (e) {\n              /* continue on listener error */\n            }\n\n            fulfill(model);\n          })\n          .catch(reject);\n      }\n    });\n\n    return promise;\n  },\n};\n\nexport default helpers;\n","/** *********************************************************************\n * IMAGE\n **********************************************************************/\nimport Backbone from 'backbone';\nimport _ from 'underscore';\n\nimport helpers from './helpers';\nimport syncHelpers from './sync_helpers';\n\nconst THUMBNAIL_WIDTH = 100; // px\nconst THUMBNAIL_HEIGHT = 100; // px\n\nconst Media = Backbone.Model.extend({\n  constructor(attributes = {}, options = {}) {\n    let attrs = attributes;\n    if (typeof attributes === 'string') {\n      const data = attributes;\n      attrs = { data };\n      return;\n    }\n\n    this.id = options.id; // remote ID\n    this.cid = options.cid || helpers.getNewUUID();\n    this.setParent(options.parent || this.parent);\n\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n\n    if (options.metadata) {\n      this.metadata = options.metadata;\n    } else {\n      this.metadata = {\n        created_on: new Date(),\n      };\n    }\n\n    this.initialize.apply(this, arguments); // eslint-disable-line\n  },\n\n  /**\n   * Synchronises the model.\n   * @param method\n   * @param model\n   * @param options\n   */\n  sync(method, model, options = {}) {\n    if (options.remote) {\n      return this._syncRemote(method, model, options);\n    }\n\n    return Promise.reject(new Error('Local sync is not possible yet.'));\n  },\n\n  /**\n   * Syncs the record to the remote server.\n   * Returns on success: model, response, options\n   */\n  _syncRemote() {\n    return Promise.reject(new Error('Remote sync is not possible yet.'));\n  },\n\n  /**\n   * Returns image's absolute URL or dataURI.\n   */\n  getURL() {\n    return this.get('data');\n  },\n\n  /**\n   * Sets parent.\n   * @param parent\n   */\n  setParent(parent) {\n    if (!parent) return;\n\n    const that = this;\n    this.parent = parent;\n    this.parent.on('destroy', () => {\n      that.destroy({ noSave: true });\n    });\n  },\n\n  /**\n   * Resizes itself.\n   */\n  resize(MAX_WIDTH, MAX_HEIGHT) {\n    const that = this;\n    const promise = new Promise((fulfill, reject) => {\n      Media.resize(this.getURL(), this.get('type'), MAX_WIDTH, MAX_HEIGHT)\n        .then(args => {\n          const [image, data] = args;\n          that.set('data', data);\n          fulfill([image, data]);\n        })\n        .catch(reject);\n    });\n    return promise;\n  },\n\n  /**\n   * Adds a thumbnail to image model.\n   * @param options\n   */\n  addThumbnail(options = {}) {\n    const that = this;\n\n    const promise = new Promise((fulfill, reject) => {\n      // check if data source is dataURI\n      const re = /^data:/i;\n      if (re.test(this.getURL())) {\n        Media.resize(\n          this.getURL(),\n          this.get('type'),\n          THUMBNAIL_WIDTH || options.width,\n          THUMBNAIL_WIDTH || options.width\n        )\n          .then(args => {\n            const [, data] = args;\n            that.set('thumbnail', data);\n            fulfill();\n          })\n          .catch(reject);\n        return;\n      }\n\n      Media.getDataURI(this.getURL(), {\n        width: THUMBNAIL_WIDTH || options.width,\n        height: THUMBNAIL_HEIGHT || options.height,\n      })\n        .then(data => {\n          that.set('thumbnail', data[0]);\n          fulfill();\n        })\n        .catch(reject);\n    });\n\n    return promise;\n  },\n\n  // overwrite if you want to validate before saving remotely\n  validate(attributes, options = {}) {\n    if (options.remote) {\n      return this.validateRemote(attributes, options);\n    }\n    return null;\n  },\n\n  validateRemote(attributes) {\n    const attrs = _.extend({}, this.attributes, attributes);\n    const errors = {};\n\n    // type\n    if (!attrs.data) {\n      errors.attributes || (errors.attributes = {});\n      errors.attributes.data = \"can't be empty\";\n    }\n\n    if (!attrs.type) {\n      errors.attributes || (errors.attributes = {});\n      errors.attributes.type = \"can't be empty\";\n    }\n\n    if (!_.isEmpty(errors)) {\n      return errors;\n    }\n\n    return null;\n  },\n\n  toJSON() {\n    const data = {\n      id: this.id,\n      cid: this.cid,\n      metadata: this.metadata,\n      attributes: this.attributes,\n    };\n    return data;\n  },\n\n  /**\n   * Returns an object with attributes and their values\n   * mapped for warehouse submission.\n   *\n   * @returns {*}\n   */\n  _getSubmission() {\n    const submission = {\n      id: this.id,\n      name: this.cid,\n    };\n\n    return [submission];\n  },\n});\n\n_.extend(Media.prototype, syncHelpers);\n\n_.extend(Media, {\n  /**\n   * Transforms and resizes an image file into a string.\n   * Can accept file image path and a file input file.\n   *\n   * @param onError\n   * @param file\n   * @param onSaveSuccess\n   * @returns {number}\n   */\n  getDataURI(file, options = {}) {\n    const promise = new Promise((fulfill, reject) => {\n      // file paths\n      if (typeof file === 'string') {\n        // get extension\n        let fileType = file.replace(/.*\\.([a-z]+)$/i, '$1');\n        if (fileType === 'jpg') fileType = 'jpeg'; // to match media types image/jpeg\n\n        Media.resize(file, fileType, options.width, options.height).then(\n          args => {\n            const [image, dataURI] = args;\n            fulfill([dataURI, fileType, image.width, image.height]);\n          }\n        );\n        return;\n      }\n\n      // file inputs\n      if (!window.FileReader) {\n        reject(new Error('No File Reader'));\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        if (options.width || options.height) {\n          // resize\n          Media.resize(\n            event.target.result,\n            file.type,\n            options.width,\n            options.height\n          ).then(args => {\n            const [image, dataURI] = args;\n            fulfill([dataURI, file.type, image.width, image.height]);\n          });\n        } else {\n          const image = new window.Image(); // native one\n\n          image.onload = () => {\n            const type = file.type.replace(/.*\\/([a-z]+)$/i, '$1');\n            fulfill([event.target.result, type, image.width, image.height]);\n          };\n          image.src = event.target.result;\n        }\n      };\n      reader.readAsDataURL(file);\n    });\n\n    return promise;\n  },\n\n  /**\n   * http://stackoverflow.com/questions/2516117/how-to-scale-an-image-in-data-uri-format-in-javascript-real-scaling-not-usin\n   * @param data\n   * @param fileType\n   * @param MAX_WIDTH\n   * @param MAX_HEIGHT\n   */\n  resize(data, fileType, MAX_WIDTH, MAX_HEIGHT) {\n    const promise = new Promise(fulfill => {\n      const image = new window.Image(); // native one\n\n      image.onload = () => {\n        let width = image.width;\n        let height = image.height;\n        const maxWidth = MAX_WIDTH || width;\n        const maxHeight = MAX_HEIGHT || height;\n\n        let res = null;\n\n        // resizing\n        if (width > height) {\n          res = width / maxWidth;\n        } else {\n          res = height / maxHeight;\n        }\n\n        width /= res;\n        height /= res;\n\n        // Create a canvas with the desired dimensions\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n\n        // Scale and draw the source image to the canvas\n        canvas.getContext('2d').drawImage(image, 0, 0, width, height);\n\n        // Convert the canvas to a data URL in some format\n        fulfill([image, canvas.toDataURL(fileType)]);\n      };\n\n      image.src = data;\n    });\n\n    return promise;\n  },\n});\n\nexport { Media as default };\n","/** *********************************************************************\n * OCCURRENCE\n **********************************************************************/\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport helpers from './helpers';\nimport syncHelpers from './sync_helpers';\nimport Media from './Media';\nimport Collection from './Collection';\n\nconst Occurrence = Backbone.Model.extend({\n  Media,\n\n  constructor(attributes = {}, options = {}) {\n    const that = this;\n    let attrs = attributes;\n\n    this.id = options.id; // remote ID\n    this.cid = options.cid || helpers.getNewUUID();\n    this.setParent(options.parent || this.parent);\n\n    this.keys = options.keys || this.keys; // warehouse attribute keys\n\n    if (options.Media) this.Media = options.Media;\n\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n\n    this.metadata = this._getDefaultMetadata(options);\n\n    if (options.media) {\n      const mediaArray = [];\n      _.each(options.media, media => {\n        if (media instanceof this.Media) {\n          media.setParent(that);\n          mediaArray.push(media);\n        } else {\n          const modelOptions = _.extend(media, { parent: that });\n          mediaArray.push(new this.Media(media.attributes, modelOptions));\n        }\n      });\n      this.media = new Collection(mediaArray, {\n        model: this.Media,\n      });\n    } else {\n      this.media = new Collection([], {\n        model: this.Media,\n      });\n    }\n\n    this.initialize.apply(this, arguments); // eslint-disable-line\n  },\n\n  /**\n   * Sets parent.\n   * todo: move to private _space\n   * @param parent\n   */\n  setParent(parent) {\n    if (!parent) return;\n\n    const that = this;\n    this.parent = parent;\n    this.parent.on('destroy', () => {\n      that.destroy({ noSave: true });\n    });\n  },\n\n  /**\n   * Adds an media to occurrence and sets the medias's parent to this.\n   * @param media\n   */\n  addMedia(mediaObj) {\n    if (!mediaObj) return;\n    mediaObj.setParent(this);\n    this.media.add(mediaObj);\n  },\n\n  /**\n   * Returns child media.\n   * @param index\n   * @returns {*}\n   */\n  getMedia(index = 0) {\n    return this.media.at(index);\n  },\n\n  // overwrite if you want to validate before saving remotely\n  validate(attributes, options = {}) {\n    if (options.remote) {\n      return this.validateRemote(attributes, options);\n    }\n    return null;\n  },\n\n  validateRemote(attributes) {\n    const attrs = _.extend({}, this.attributes, attributes);\n    const media = {};\n\n    const modelErrors = {};\n\n    // location\n    if (!attrs.taxon) {\n      modelErrors.taxon = \"can't be blank\";\n    }\n\n    // media\n    if (this.media.length) {\n      this.media.each(mediaModel => {\n        const errors = mediaModel.validateRemote();\n        if (errors) {\n          const mediaID = mediaModel.cid;\n          media[mediaID] = errors;\n        }\n      });\n    }\n\n    const errors = {};\n    if (!_.isEmpty(media)) {\n      errors.media = media;\n    }\n    if (!_.isEmpty(modelErrors)) {\n      errors.attributes = modelErrors;\n    }\n\n    if (!_.isEmpty(errors)) {\n      return errors;\n    }\n\n    return null;\n  },\n\n  toJSON() {\n    let media;\n    if (!this.media) {\n      media = [];\n      console.warn('toJSON media missing');\n    } else {\n      media = this.media.toJSON();\n    }\n    const data = {\n      id: this.id,\n      cid: this.cid,\n      metadata: this.metadata,\n      attributes: this.attributes,\n      media,\n    };\n    return data;\n  },\n\n  /**\n   * Returns an object with attributes and their values\n   * mapped for warehouse submission.\n   *\n   * @returns {*}\n   */\n  _getSubmission(options = {}) {\n    const that = this;\n    const occKeys = typeof this.keys === 'function' ? this.keys() : this.keys;\n    const keys = $.extend(true, Occurrence.keys, occKeys); // warehouse keys/values to transform\n    const media = [...this.media.models]; // all media within this and child models\n\n    const submission = {\n      id: this.id,\n      external_key: this.cid,\n      fields: {},\n      media: [],\n    };\n\n    if (this.metadata.training || options.training) {\n      submission.training = this.metadata.training || options.training;\n    }\n\n    if (this.metadata.release_status || options.release_status) {\n      submission.release_status =\n        this.metadata.release_status || options.release_status;\n    }\n\n    if (this.metadata.record_status || options.record_status) {\n      submission.record_status =\n        this.metadata.record_status || options.record_status;\n    }\n\n    if (this.metadata.sensitive || options.sensitive) {\n      submission.sensitive = this.metadata.sensitive || options.sensitive;\n    }\n\n    if (this.metadata.confidential || options.confidential) {\n      submission.confidential =\n        this.metadata.confidential || options.confidential;\n    }\n\n    if (this.metadata.sensitivity_precision || options.sensitivity_precision) {\n      submission.sensitivity_precision =\n        this.metadata.sensitivity_precision || options.sensitivity_precision;\n    }\n\n    // transform attributes\n    Object.keys(this.attributes).forEach(attr => {\n      // no need to send attributes with no values\n      let value = that.attributes[attr];\n      if (!value) return;\n\n      if (!keys[attr]) {\n        if (attr !== 'email') {\n          console.warn(`Indicia: no such key: ${attr}`);\n        }\n        submission.fields[attr] = value;\n        return;\n      }\n\n      const warehouseAttr = keys[attr].id || attr;\n\n      // check if has values to choose from\n      if (keys[attr].values) {\n        if (typeof keys[attr].values === 'function') {\n          // get a value from a function\n          value = keys[attr].values(value, submission, that);\n        } else if (_.isArray(value)) {\n          // the attribute has multiple values\n          value = value.map(v => keys[attr].values[v]);\n        } else {\n          value = keys[attr].values[value];\n        }\n      }\n\n      // don't need to send null or undefined\n      if (value) {\n        submission.fields[warehouseAttr] = value;\n      }\n    });\n\n    // transform sub models\n    // media does not return any media-models only JSON data about them\n    // media files will be attached separately\n    const [mediaSubmission] = this.media._getSubmission();\n    submission.media = mediaSubmission;\n\n    return [submission, media];\n  },\n\n  /**\n   * Synchronises the model.\n   * @param method\n   * @param model\n   * @param options\n   */\n  sync(method, model, options = {}) {\n    if (options.remote) {\n      return this._syncRemote(method, model, options);\n    }\n\n    return Promise.reject(new Error('Local sync is not possible yet.'));\n  },\n\n  /**\n   * Syncs the record to the remote server.\n   * Returns on success: model, response, options\n   */\n  _syncRemote() {\n    return Promise.reject(new Error('Remote sync is not possible yet.'));\n  },\n\n  _getDefaultMetadata(options) {\n    const metadata =\n      typeof this.metadata === 'function' ? this.metadata() : this.metadata;\n\n    options.metadata = options.metadata || {};\n\n    const today = new Date();\n    const defaults = {\n      training: options.training,\n\n      created_on: today,\n      updated_on: today,\n\n      synced_on: null, // set when fully initialized only\n      server_on: null, // updated on server\n    };\n\n    return $.extend(true, defaults, metadata, options.metadata);\n  },\n});\n\n_.extend(Occurrence.prototype, syncHelpers);\n\n/**\n * Warehouse attributes and their values.\n */\nOccurrence.keys = {\n  taxon: {\n    id: 'taxa_taxon_list_id',\n  },\n  comment: { id: 'comment' },\n};\n\nexport { Occurrence as default };\n","/** *********************************************************************\n * SAMPLE\n *\n * Refers to the event in which the sightings were observed, in other\n * words it describes the place, date, people, environmental conditions etc.\n * Within a sample, you can have zero or more occurrences which refer to each\n * species sighted as part of the sample.\n **********************************************************************/\nimport Backbone from 'backbone';\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  SYNCHRONISING,\n  CONFLICT,\n  CHANGED_LOCALLY,\n  CHANGED_SERVER,\n  SYNCED,\n  SERVER,\n  LOCAL,\n  API_BASE,\n  API_VER,\n  API_SAMPLES_PATH,\n} from './constants';\nimport helpers from './helpers';\nimport syncHelpers from './sync_helpers';\nimport Media from './Media';\nimport Store from './Store';\nimport Occurrence from './Occurrence';\nimport Collection from './Collection';\n\nconst Sample = Backbone.Model.extend({\n  Media,\n  Occurrence,\n\n  host_url: null, // must be set up for remote sync\n  api_key: null, // must be set up for remote sync\n\n  user: null, // must be set up for remote sync\n  password: null, // must be set up for remote sync\n\n  constructor(attributes = {}, options = {}) {\n    this.id = options.id; // remote ID\n    this.cid = options.cid || helpers.getNewUUID();\n    this.setParent(options.parent || this.parent);\n\n    this.store = options.store || this.store || new Store();\n    this.keys = options.keys || this.keys; // warehouse attribute keys\n\n    if (options.Media) this.Media = options.Media;\n    if (options.Occurrence) this.Occurrence = options.Occurrence;\n    if (options.onSend) this.onSend = options.onSend;\n\n    // remote host defaults\n    this.host_url = options.host_url || this.host_url;\n    this.api_key = options.api_key || this.api_key;\n    this.user = options.user || this.user;\n    this.password = options.password || this.password;\n\n    // attrs\n    this.attributes = {};\n    const defaultAttrs = {\n      date: new Date(),\n      location_type: 'latlon',\n    };\n    let attrs = _.extend(defaultAttrs, attributes);\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n\n    // metadata\n    this.metadata = this._getDefaultMetadata(options);\n\n    this.remote = {}; // for synchronisation state\n\n    // initialise sub models\n    this.occurrences = this._parseModels(options.occurrences, this.Occurrence);\n    this.samples = this._parseModels(options.samples, this.constructor);\n    this.media = this._parseModels(options.media, this.Media);\n\n    this.initialize.apply(this, arguments); // eslint-disable-line\n  },\n\n  /**\n   * Sets parent.\n   * @param parent\n   */\n  setParent(parent) {\n    if (!parent) return;\n\n    const that = this;\n    this.parent = parent;\n    this.parent.on('destroy', () => {\n      that.destroy({ noSave: true });\n    });\n  },\n\n  /**\n   * Adds a subsample to the sample and sets the samples's parent to this.\n   * @param sample\n   */\n  addSample(sample) {\n    if (!sample) return;\n    sample.setParent(this);\n\n    this.samples.push(sample);\n  },\n\n  /**\n   * Adds an occurrence to sample and sets the occurrence's sample to this.\n   * @param occurrence\n   */\n  addOccurrence(occurrence) {\n    if (!occurrence) return;\n    occurrence.setParent(this);\n\n    this.occurrences.push(occurrence);\n  },\n\n  /**\n   * Adds an media to occurrence and sets the media's occurrence to this.\n   * @param media\n   */\n  addMedia(media) {\n    if (!media) return;\n    media.setParent(this);\n    this.media.add(media);\n  },\n\n  // overwrite if you want to validate before saving locally\n  validate(attributes, options = {}) {\n    if (options.remote) {\n      return this.validateRemote(attributes, options);\n    }\n    return null;\n  },\n\n  validateRemote(attributes) {\n    const attrs = _.extend({}, this.attributes, attributes);\n\n    const modelErrors = {};\n    const samples = {};\n    const occurrences = {};\n    const media = {};\n\n    // location\n    if (!attrs.location) {\n      modelErrors.location = \"can't be blank\";\n    }\n\n    // location type\n    if (!attrs.location_type) {\n      modelErrors.location_type = \"can't be blank\";\n    }\n\n    // date\n    if (!attrs.date) {\n      modelErrors.date = \"can't be blank\";\n    } else {\n      const date = new Date(attrs.date);\n      if (date === 'Invalid Date' || date > new Date()) {\n        modelErrors.date =\n          new Date(date) > new Date() ? 'future date' : 'invalid';\n      }\n    }\n\n    // check if has any indirect occurrences\n    if (!this.samples.length && !this.occurrences.length) {\n      modelErrors.occurrences = 'no occurrences';\n    }\n\n    // samples\n    if (this.samples.length) {\n      this.samples.each(model => {\n        const errors = model.validateRemote();\n        if (errors) {\n          const sampleID = model.cid;\n          samples[sampleID] = errors;\n        }\n      });\n    }\n\n    // occurrences\n    if (this.occurrences.length) {\n      this.occurrences.each(occurrence => {\n        const errors = occurrence.validateRemote();\n        if (errors) {\n          const occurrenceID = occurrence.cid;\n          occurrences[occurrenceID] = errors;\n        }\n      });\n    }\n\n    // media\n    if (this.media.length) {\n      this.media.each(mediaModel => {\n        const errors = mediaModel.validateRemote();\n        if (errors) {\n          const mediaID = mediaModel.cid;\n          media[mediaID] = errors;\n        }\n      });\n    }\n\n    const errors = {};\n    if (!_.isEmpty(media)) {\n      errors.media = media;\n    }\n    if (!_.isEmpty(occurrences)) {\n      errors.occurrences = occurrences;\n    }\n    if (!_.isEmpty(samples)) {\n      errors.samples = samples;\n    }\n    if (!_.isEmpty(modelErrors)) {\n      errors.attributes = modelErrors;\n    }\n\n    if (!_.isEmpty(errors)) {\n      return errors;\n    }\n\n    return null;\n  },\n\n  /**\n   * Synchronises the model.\n   * @param method\n   * @param model\n   * @param options\n   */\n  sync(method, model, options = {}) {\n    if (options.remote) {\n      return this._syncRemote(method, model, options);\n    }\n\n    if (!this.store) {\n      return Promise.reject(\n        new Error('Trying to locally sync a model without a store')\n      );\n    }\n\n    try {\n      this.trigger('request', model, null, options);\n    } catch (e) {\n      /* continue on listener error */\n    }\n    return this.store.sync(method, model, options);\n  },\n\n  /**\n   * Syncs the record to the remote server.\n   * Returns on success: model, response, options\n   */\n  _syncRemote(method, model, options) {\n    // Ensure that we have a URL.\n    if (!this.host_url) {\n      return Promise.reject(\n        new Error('A \"url\" property or function must be specified')\n      );\n    }\n\n    model.remote.synchronising = true;\n\n    // model.trigger('request', model, xhr, options);\n    switch (method) {\n      case 'create':\n        return this._create(model, options)\n          .then(val => {\n            model.remote.synchronising = false;\n            return val;\n          })\n          .catch(err => {\n            model.remote.synchronising = false;\n            return Promise.reject(err);\n          });\n\n      case 'update':\n        // todo\n        model.remote.synchronising = false;\n        return Promise.reject(\n          new Error('Updating the model is not possible yet.')\n        );\n\n      case 'read':\n        // todo\n        model.remote.synchronising = false;\n        return Promise.reject(\n          new Error('Reading the model is not possible yet.')\n        );\n\n      case 'delete':\n        // todo\n        model.remote.synchronising = false;\n        return Promise.reject(\n          new Error('Deleting the model is not possible yet.')\n        );\n\n      default:\n        model.remote.synchronising = false;\n        return Promise.reject(\n          new Error(`No such remote sync option: ${method}`)\n        );\n    }\n  },\n\n  /**\n   * Posts a record to remote server.\n   * @param model\n   * @param options\n   */\n  _create(model, options) {\n    const that = this;\n\n    // async call to get the form data\n    return that\n      ._getModelData(model)\n      .then(data => that._ajaxModel(data, model, options));\n  },\n\n  _ajaxModel(data, model, options) {\n    const that = this;\n    const promise = new Promise((fulfill, reject) => {\n      // get timeout\n      let timeout = options.timeout || that.timeout || 30000; // 30s\n      timeout = typeof timeout === 'function' ? timeout() : timeout;\n\n      const url = that.host_url + API_BASE + API_VER + API_SAMPLES_PATH;\n      const xhr = (options.xhr = Backbone.ajax({\n        url,\n        type: 'POST',\n        data,\n        headers: {\n          authorization: that.getUserAuth(),\n          'x-api-key': that.api_key,\n        },\n        processData: false,\n        contentType: false,\n        timeout,\n      }));\n\n      xhr.done(responseData => fulfill(responseData));\n\n      xhr.fail((jqXHR, textStatus, errorThrown) => {\n        if (jqXHR.status === 409) {\n          // duplicate occurred - this fixes only occurrence duplicates!\n          // todo: remove once this is sorted\n          const responseData = {\n            data: {\n              id: null,\n              external_key: null,\n              occurrences: [],\n            },\n          };\n\n          jqXHR.responseJSON.errors.forEach(error => {\n            responseData.data.id = error.sample_id;\n            responseData.data.external_key = error.sample_external_key;\n            responseData.data.occurrences.push({\n              id: error.id,\n              external_key: error.external_key,\n            });\n          });\n\n          fulfill(responseData);\n          return;\n        }\n\n        let error = new Error(errorThrown);\n        if (jqXHR.responseJSON && jqXHR.responseJSON.errors) {\n          const message = jqXHR.responseJSON.errors.reduce(\n            (name, err) => `${name}${err.title}\\n`,\n            ''\n          );\n          error = new Error(message);\n        }\n        try {\n          model.trigger('error:remote', error);\n        } catch (e) {\n          /* continue on listener error */\n        }\n        reject(error);\n      });\n\n      try {\n        model.trigger('request:remote', model, xhr, options);\n      } catch (e) {\n        /* continue on listener error */\n      }\n    });\n\n    return promise;\n  },\n\n  _remoteCreateParse(model, responseData) {\n    // get new ids\n    const remoteIDs = {};\n\n    // recursively extracts ids from collection of response models\n    function getIDs(data) {\n      remoteIDs[data.external_key] = data.id;\n      if (data.samples) {\n        data.samples.forEach(subModel => getIDs(subModel));\n      }\n      if (data.occurrences) {\n        data.occurrences.forEach(subModel => getIDs(subModel));\n      }\n      // Images don't store external_keys yet.\n      // if (data.media) data.media.forEach(subModel => getIDs(subModel));\n    }\n\n    getIDs(responseData);\n\n    this._setNewRemoteID(model, remoteIDs);\n  },\n\n  /**\n   * Sets new server IDs to the models.\n   */\n  _setNewRemoteID(model, remoteIDs) {\n    // set new remote ID\n    const remoteID = remoteIDs[model.cid];\n    if (remoteID) {\n      model.id = remoteID;\n    }\n\n    // do that for all submodels\n    if (model.samples) {\n      model.samples.forEach(subModel =>\n        this._setNewRemoteID(subModel, remoteIDs)\n      );\n    }\n    if (model.occurrences) {\n      model.occurrences.forEach(subModel =>\n        this._setNewRemoteID(subModel, remoteIDs)\n      );\n    }\n    if (model.media) {\n      model.media.forEach(subModel =>\n        this._setNewRemoteID(subModel, remoteIDs)\n      );\n    }\n  },\n\n  _getModelData(model) {\n    if (!model) {\n      throw new Error('No model passed to _getModelData.');\n    }\n\n    const that = this;\n\n    // get submission model and all the media\n    const [submission, media] = model._getSubmission();\n    submission.type = 'samples';\n\n    // allow updating the submission data if onSend function is set\n    if (this.onSend) {\n      return this.onSend(submission, media).then(data => {\n        const [newSubmission, newMedia] = data;\n        return that._normaliseModelData(newSubmission, newMedia);\n      });\n    }\n\n    return this._normaliseModelData(submission, media);\n  },\n\n  /**\n   * Creates a stringified JSON representation of the model or a FormData object.\n   * If the media is present then it creates a FormData so that the record\n   * could be submitted in one call.\n   */\n  _normaliseModelData(submission, media) {\n    // stringify submission\n    const stringSubmission = JSON.stringify({\n      data: submission,\n    });\n\n    // with media send form-data in one request\n    if (media.length) {\n      const formData = new FormData(); // for submission\n      formData.append('submission', stringSubmission);\n      // append media\n      return this._mediaAppend(media, formData).then(() =>\n        Promise.resolve(formData)\n      );\n    }\n\n    return Promise.resolve(stringSubmission);\n  },\n\n  _mediaAppend(media, formData) {\n    const mediaProcesses = [];\n    media.forEach(mediaModel => {\n      const imagePromise = new Promise(_fulfill => {\n        const url = mediaModel.getURL();\n        const type = mediaModel.get('type');\n        const name = mediaModel.cid;\n\n        function onSuccess(err, img, dataURI, blob) {\n          // can provide both image/jpeg and jpeg\n          let extension = type;\n          let mediaType = type;\n          if (type.match(/image.*/)) {\n            extension = type.split('/')[1];\n          } else {\n            mediaType = `image/${mediaType}`;\n          }\n          if (!blob) {\n            blob = helpers.dataURItoBlob(dataURI, mediaType);\n          }\n\n          formData.append(name, blob, `${name}.${extension}`);\n          _fulfill();\n        }\n\n        if (!helpers.isDataURL(url)) {\n          // load image\n          const xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'blob';\n          xhr.onload = () => {\n            onSuccess(null, null, null, xhr.response);\n          };\n          // todo check error case\n\n          xhr.send();\n        } else {\n          onSuccess(null, null, url);\n        }\n      });\n      mediaProcesses.push(imagePromise);\n    });\n\n    return Promise.all(mediaProcesses);\n  },\n\n  /**\n   * Returns an object with attributes and their values\n   * mapped for warehouse submission.\n   *\n   * @returns {*}\n   */\n  _getSubmission(options = {}) {\n    const that = this;\n    const sampleKeys =\n      typeof this.keys === 'function' ? this.keys() : this.keys;\n    const keys = $.extend(true, Sample.keys, sampleKeys); // warehouse keys/values to transform\n    let media = [...this.media.models]; // all media within this and child models\n\n    const submission = {\n      id: this.id,\n      external_key: this.cid,\n      survey_id: this.metadata.survey_id,\n      input_form: this.metadata.input_form,\n      fields: {},\n      media: [],\n    };\n\n    // transform attributes\n    Object.keys(this.attributes).forEach(attr => {\n      // no need to send attributes with no values\n      let value = that.attributes[attr];\n      if (!value) return;\n\n      if (!keys[attr]) {\n        if (attr !== 'email') {\n          console.warn(`Indicia: no such key: ${attr}`);\n        }\n        submission.fields[attr] = value;\n        return;\n      }\n\n      const warehouseAttr = keys[attr].id || attr;\n\n      // check if has values to choose from\n      if (keys[attr].values) {\n        if (typeof keys[attr].values === 'function') {\n          // get a value from a function\n          value = keys[attr].values(value, submission, that);\n        } else if (_.isArray(value)) {\n          // the attribute has multiple values\n          value = value.map(v => keys[attr].values[v]);\n        } else {\n          value = keys[attr].values[value];\n        }\n      }\n\n      // don't need to send null or undefined\n      if (value) {\n        submission.fields[warehouseAttr] = value;\n      }\n    });\n\n    const sampleOptions = _.extend({}, options);\n    this.metadata.training && (sampleOptions.training = this.metadata.training);\n    this.metadata.release_status &&\n      (sampleOptions.release_status = this.metadata.release_status);\n    this.metadata.record_status &&\n      (sampleOptions.record_status = this.metadata.record_status);\n    this.metadata.sensitive &&\n      (sampleOptions.sensitive = this.metadata.sensitive);\n    this.metadata.confidential &&\n      (sampleOptions.confidential = this.metadata.confidential);\n    this.metadata.sensitivity_precision &&\n      (sampleOptions.sensitivity_precision = this.metadata.sensitivity_precision);\n\n    // transform sub models\n    // occurrences\n    const [occurrences, occurrencesMedia] = this.occurrences._getSubmission(\n      sampleOptions\n    );\n    submission.occurrences = occurrences;\n    media = media.concat(occurrencesMedia);\n\n    // samples\n    const [samples, samplesMedia] = this.samples._getSubmission(sampleOptions);\n    submission.samples = samples;\n    media = media.concat(samplesMedia);\n\n    // media - does not return any media-models only JSON data about them\n    const [mediaSubmission] = this.media._getSubmission(sampleOptions);\n    submission.media = mediaSubmission;\n\n    return [submission, media];\n  },\n\n  toJSON() {\n    let occurrences;\n    if (!this.occurrences) {\n      occurrences = [];\n      console.warn('toJSON occurrences missing');\n    } else {\n      occurrences = this.occurrences.toJSON();\n    }\n\n    let samples;\n    if (!this.samples) {\n      samples = [];\n      console.warn('toJSON samples missing');\n    } else {\n      samples = this.samples.toJSON();\n    }\n\n    let media;\n    if (!this.media) {\n      media = [];\n      console.warn('toJSON media missing');\n    } else {\n      media = this.media.toJSON();\n    }\n\n    const data = {\n      id: this.id,\n      cid: this.cid,\n      metadata: this.metadata,\n      attributes: this.attributes,\n      occurrences,\n      samples,\n      media,\n    };\n\n    return data;\n  },\n\n  /**\n   * Sync statuses:\n   * synchronising, synced, remote, server, changed_remotely, changed_server, conflict\n   */\n  getSyncStatus() {\n    const meta = this.metadata;\n    // on server\n    if (this.remote.synchronising) {\n      return SYNCHRONISING;\n    }\n\n    if (this.id >= 0) {\n      // fully initialized\n      if (meta.synced_on) {\n        // changed_remotely\n        if (meta.synced_on < meta.updated_on) {\n          // changed_server - conflict!\n          if (meta.synced_on < meta.server_on) {\n            return CONFLICT;\n          }\n          return CHANGED_LOCALLY;\n          // changed_server\n        } else if (meta.synced_on < meta.server_on) {\n          return CHANGED_SERVER;\n        }\n        return SYNCED;\n\n        // partially initialized - we know the record exists on\n        // server but has not yet been downloaded\n      }\n      return SERVER;\n\n      // local only\n    }\n    return LOCAL;\n  },\n\n  /**\n   * Returns child occurrence.\n   * @param index\n   * @returns {*}\n   */\n  getOccurrence(index = 0) {\n    return this.occurrences.at(index);\n  },\n\n  /**\n   * Returns child sample.\n   * @param index\n   * @returns {*}\n   */\n  getSample(index = 0) {\n    return this.samples.at(index);\n  },\n\n  /**\n   * Returns child media.\n   * @param index\n   * @returns {*}\n   */\n  getMedia(index = 0) {\n    return this.media.at(index);\n  },\n\n  getUserAuth() {\n    if (!this.user || !this.password) {\n      return null;\n    }\n\n    const user = typeof this.user === 'function' ? this.user() : this.user;\n    const password =\n      typeof this.password === 'function' ? this.password() : this.password;\n    const basicAuth = btoa(`${user}:${password}`);\n\n    return `Basic  ${basicAuth}`;\n  },\n\n  _parseModels(models, Model) {\n    if (!models) {\n      // init empty samples collection\n      return new Collection([], { model: Model });\n    }\n\n    const that = this;\n\n    const modelsArray = [];\n    _.each(models, model => {\n      if (model instanceof Model) {\n        model.setParent(that);\n        modelsArray.push(model);\n      } else {\n        const modelOptions = _.extend(model, { parent: that });\n        const newModel = new Model(model.attributes, modelOptions);\n        modelsArray.push(newModel);\n      }\n    });\n\n    return new Collection(modelsArray, { model: Model });\n  },\n\n  isNew() {\n    return !this.id;\n  },\n\n  // Fetch the model from the server, merging the response with the model's\n  // local attributes. Any changed attributes will trigger a \"change\" event.\n  fetch(options) {\n    const model = this;\n    const promise = new Promise((fulfill, reject) => {\n      options = _.extend({ parse: true }, options);\n      return this.sync('read', this, options)\n        .then(resp => {\n          // set the returned model's data\n          model.id = resp.id;\n          model.metadata = resp.metadata;\n          if (!model.set(resp.attributes, options)) return false;\n\n          // initialise sub models\n          model.occurrences = model._parseModels(\n            resp.occurrences,\n            model.Occurrence\n          );\n          model.samples = model._parseModels(resp.samples, Sample);\n          model.media = model._parseModels(resp.media, model.Media);\n\n          try {\n            model.trigger('sync', model, resp, options);\n          } catch (e) {\n            /* continue on listener error */\n          }\n\n          fulfill(model);\n          return null;\n        })\n        .catch(reject);\n    });\n\n    return promise;\n  },\n\n  _getDefaultMetadata(options) {\n    const metadata =\n      typeof this.metadata === 'function' ? this.metadata() : this.metadata;\n    const today = new Date();\n    const defaults = {\n      survey_id: options.survey_id,\n      input_form: options.input_form,\n\n      created_on: today,\n      updated_on: today,\n\n      synced_on: null, // set when fully initialized only\n      server_on: null, // updated on server\n    };\n\n    return $.extend(true, defaults, metadata, options.metadata);\n  },\n});\n\n_.extend(Sample.prototype, syncHelpers);\n\n/**\n * Warehouse attributes and their values.\n */\nSample.keys = {\n  date: { id: 'date' },\n  sample_method_id: { id: 'sample_method_id' },\n  location: { id: 'entered_sref' },\n  location_type: {\n    id: 'entered_sref_system',\n    values: {\n      british: 'OSGB', // for British National Grid\n      irish: 'OSIE', // for Irish Grid\n      channel: 'utm30ed50', // for Channel Islands Grid\n      latlon: 4326, // for Latitude and Longitude in decimal form (WGS84 datum)\n    },\n  },\n  form: { id: 'input_form' },\n  group: { id: 'group_id' },\n  comment: { id: 'comment' },\n};\n\nexport { Sample as default };\n","import _ from 'underscore';\nimport Store from './Store';\nimport Collection from './Collection';\nimport Sample from './Sample';\nimport Occurrence from './Occurrence';\nimport Media from './Media';\nimport Report from './Report';\nimport * as CONST from './constants';\n\nconst Indicia = {\n  /* global LIB_VERSION */\n  VERSION: LIB_VERSION, // replaced by build\n\n  Store,\n  Collection,\n\n  Sample,\n  Occurrence,\n  Media,\n  Report,\n};\n\n_.extend(Indicia, CONST);\n\nexport { Indicia as default };\n","import $ from 'jquery';\nimport { API_BASE, API_VER, API_REPORTS_PATH } from './constants';\n\nclass Report {\n  constructor(options = {}) {\n    this.host_url = options.host_url || this.host_url;\n    this.user = options.user || this.user;\n    this.password = options.password || this.password;\n    this.report = options.report || this.report;\n\n    this.api_key = options.api_key || this.api_key;\n    this.params = options.params || this.params;\n    this.timeout = options.timeout || 180000; // 3 min;\n  }\n\n  run(params) {\n    const that = this;\n    const promise = new Promise((fulfill, reject) => {\n      const url =\n        this.host_url + API_BASE + API_VER + API_REPORTS_PATH + this.report;\n\n      params = $.extend(params || that.params, { api_key: that.api_key });\n      $.get({\n        url,\n        data: params,\n        timeout: that.timeout,\n        headers: {\n          authorization: that.getUserAuth(),\n          'x-api-key': that.api_key,\n        },\n        success: fulfill,\n        error: (jqXHR, textStatus, errorThrown) => {\n          let error = new Error(errorThrown);\n          if (jqXHR.responseJSON && jqXHR.responseJSON.errors) {\n            const message = jqXHR.responseJSON.errors.reduce(\n              (name, err) => `${name}${err.title}\\n`,\n              ''\n            );\n            error = new Error(message);\n          }\n          reject(error);\n        },\n      });\n    });\n\n    return promise;\n  }\n\n  getUserAuth() {\n    if (!this.user || !this.password) {\n      return null;\n    }\n\n    const user = typeof this.user === 'function' ? this.user() : this.user;\n    const password =\n      typeof this.password === 'function' ? this.password() : this.password;\n    const basicAuth = btoa(`${user}:${password}`);\n\n    return `Basic  ${basicAuth}`;\n  }\n}\n\nexport default Report;\n"],"names":["_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","module","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","Store","options","that","this","localForage","ready","Promise","resolve","reject","_resolve","driverOrder","LocalForage","defineDriver","then","dbConfig","name","storeName","version","drivers","_getDriverOrder","DB","createInstance","setDriver","catch","method","model","cid","find","findAll","create","update","destroy","Error","_callWhenReady","Backbone","Collection","models","toWait","_","each","collectionModel","store","push","save","all","id","_this","setItem","toJSON","_this2","getItem","data","_this3","iterate","value","clone","_this4","removeItem","func","bind","map","driver","INDEXEDDB","WEBSQL","LOCALSTORAGE","_driver","console","error","arr","Array","isArray","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","arrayWithHoles","iterableToArrayLimit","nonIterableRest","extend","apply","arguments","comparator","a","metadata","created_on","size","collection","sync","fetch","parse","resp","reset","trigger","e","remote","_syncRemote","synchronising","_getSubmission","submission","media","forEach","modelSubmission","modelMedia","concat","_prepareModel","_isModel","attrs","attributes","validationError","arr2","iter","from","arrayWithoutHoles","iterableToArray","nonIterableSpread","getNewUUID","replace","c","r","Math","random","dataURItoBlob","dataURI","fileType","binary","atob","split","array","charCodeAt","Blob","Uint8Array","type","isDataURL","string","match","isPlainObject","class2type","types","toLowerCase","String","nodeType","isWindow","hasOwn","isEmptyObject","formatDate","dateToFormat","day","month","date","now","Date","dateArray","test","window","parseInt","getDate","slice","getMonth","getFullYear","helpers","val","wait","validate","set","_validate","isNew","patch","parent","_remoteCreateParse","timeNow","server_on","updated_on","synced_on","promise","fulfill","finalise","stopListening","noSave","Media","Model","setParent","defaults","result","changed","initialize","getURL","get","on","resize","MAX_WIDTH","MAX_HEIGHT","args","image","addThumbnail","getDataURI","width","height","validateRemote","errors","isEmpty","syncHelpers","file","FileReader","reader","onload","event","Image","src","readAsDataURL","res","canvas","document","createElement","getContext","drawImage","toDataURL","Occurrence","keys","_getDefaultMetadata","mediaArray","modelOptions","addMedia","mediaObj","add","getMedia","index","at","modelErrors","taxon","mediaModel","mediaID","warn","occKeys","$","external_key","fields","training","release_status","record_status","sensitive","confidential","sensitivity_precision","attr","warehouseAttr","values","v","mediaSubmission","today","comment","Sample","host_url","api_key","user","password","onSend","defaultAttrs","location_type","occurrences","_parseModels","samples","addSample","sample","addOccurrence","occurrence","location","sampleID","occurrenceID","_create","_getModelData","_ajaxModel","timeout","url","xhr","ajax","headers","authorization","getUserAuth","processData","contentType","responseData","fail","jqXHR","textStatus","errorThrown","status","responseJSON","sample_id","sample_external_key","message","reduce","title","remoteIDs","getIDs","subModel","_setNewRemoteID","remoteID","newSubmission","newMedia","_normaliseModelData","stringSubmission","JSON","stringify","formData","FormData","append","_mediaAppend","mediaProcesses","imagePromise","_fulfill","onSuccess","img","blob","extension","mediaType","XMLHttpRequest","open","responseType","response","send","sampleKeys","survey_id","input_form","sampleOptions","occurrencesMedia","samplesMedia","getSyncStatus","meta","getOccurrence","getSample","basicAuth","btoa","modelsArray","newModel","sample_method_id","british","irish","channel","latlon","form","group","Indicia","VERSION","Report","report","params","success","CONST"],"mappings":"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"}